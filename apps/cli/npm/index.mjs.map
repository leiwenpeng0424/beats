{"version":3,"file":"index.mjs","sources":["../src/constants.ts","../src/configuration.ts","../src/env.ts","../src/terminal.ts","../src/log.ts","../src/utils.ts","../src/dts.ts","../src/rollup.ts","../src/tsconfig.ts","../src/cli.ts"],"sourcesContent":["export const tsconfig = \"./tsconfig.json\";\nexport const packageJson = \"./package.json\";\nexport const dtsEntry = \"index.d.ts\";\n\nexport const output = \"./index.js\";\nexport const input = \"./src/index\";\n\nexport const outputDir = \"npm\";\nexport const dtsDir = \".dts\";\n\nexport const esmExt = [\".mjs\", \".mts\"];\nexport const cjsExt = [\".cjs\", \".cts\"];\n\nexport const esmMiddleNames = [\".esm.\", \".es.\"];\nexport const cjsMiddleNames = [\".cjs.\"];\n\nexport const Extensions = [\n    \".js\",\n    \".jsx\",\n    \".ts\",\n    \".tsx\",\n    \".json\",\n    \".mjs\",\n    \".cjs\",\n    \".mts\",\n    \".cts\",\n    \".node\",\n];\n\nexport const StyleSheetExtensions = [\n    \".css\",\n    \".less\",\n    \".pcss\",\n    \".scss\",\n    \".sass\",\n];\n\n","import * as CONSTANTS from \"@/constants\";\nimport { module_ } from \"@nfts/nodeutils\";\nimport type { IPackageJson } from \"@nfts/pkg-json\";\nimport type { TRollupTransformOptions } from \"@nfts/plugin-esbuild\";\nimport { TTarget } from \"@nfts/tsc-json\";\nimport type { RollupCommonJSOptions } from \"@rollup/plugin-commonjs\";\nimport type { RollupEslintOptions } from \"@rollup/plugin-eslint\";\nimport type { RollupNodeResolveOptions } from \"@rollup/plugin-node-resolve\";\nimport nodeFs from \"node:fs/promises\";\nimport nodePath from \"node:path\";\nimport type { ModuleFormat, Plugin, RollupOptions } from \"rollup\";\n\n/**\n * Return output format.\n * @param output\n */\nfunction getFormatFromFileName(output: string): ModuleFormat {\n    const ext = nodePath.extname(output);\n\n    if (CONSTANTS.esmExt.includes(ext) || output.endsWith(\".d.ts\")) {\n        return \"es\";\n    }\n\n    if (CONSTANTS.cjsExt.includes(ext)) {\n        return \"cjs\";\n    }\n\n    if (CONSTANTS.esmMiddleNames.some((name) => output.includes(name))) {\n        return \"es\";\n    }\n\n    if (CONSTANTS.cjsMiddleNames.some((name) => output.includes(name))) {\n        return \"cjs\";\n    }\n\n    return \"cjs\";\n}\n\n/**\n * Get outputs from package.json\n * @param pkgJson\n * @param externalOutputOptions\n */\nfunction getOutputFromPackageJson(\n    pkgJson: IPackageJson,\n    externalOutputOptions: (opt: TBundleConfig) => TBundleConfig = (o) => o,\n): TBundleConfig[] {\n    const { main, module: m } = pkgJson;\n    return (\n        [main, m]\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .filter<string>(Boolean)\n            .map((output) => {\n                const format = getFormatFromFileName(output);\n\n                // dot mark fallback to ./index.js\n                if (output === \".\") {\n                    output = CONSTANTS.output;\n                }\n\n                return externalOutputOptions({\n                    format,\n                    file: output,\n                });\n            })\n    );\n}\n\n/**\n * Default config.\n */\nconst Configs = [\"beats.config.js\", \"beats.config.ts\", \"beats.config.json\"];\n\nexport type TBundleConfig = {\n    input?: string;\n    dir?: string;\n    file?: string;\n    format?: ModuleFormat;\n    globals?: string[];\n    plugins?: Plugin[];\n    paths?: {\n        [K: string]: string;\n    };\n    sourcemap?: boolean | \"inline\" | \"hidden\";\n};\n\nexport interface CLIOptions {\n    // eslint-disable-next-line\n    [K: string]: any;\n    /**\n     * Entry file for all bundle output. If you are not specified in bundle item.\n     * this would be the default input.\n     */\n    input?: string;\n\n    /**\n     * Should generate .d.ts file for bundle.\n     */\n    dtsRollup?: boolean;\n\n    /**\n     * Generate .map file for bundle output.\n     */\n    sourcemap?: boolean | \"inline\" | \"hidden\";\n\n    /**\n     * Specified beats config file path.\n     */\n    config?: string;\n\n    /**\n     * tsconfig file path.\n     */\n    project?: string;\n\n    /**\n     * Print more info in terminal during bundle.\n     */\n    verbose?: boolean;\n\n    /**\n     * Watch mode.\n     */\n    watch?: boolean;\n\n    /**\n     * Cleanup before output write.\n     */\n    clean?: boolean;\n\n    /**\n     * Confound bundle code.\n     */\n    minify?: boolean;\n\n    /**\n     * Show internal debug info.\n     */\n    debug?: boolean;\n\n    /**\n     * Build target\n     */\n    target?: TTarget;\n}\n\nexport interface Config extends CLIOptions {\n    /**\n     * Dependencies should be exclude during bundle.\n     */\n    externals?: string[];\n\n    /**\n     * esbuild options.\n     */\n    esbuild?: TRollupTransformOptions;\n\n    /**\n     * eslint options.\n     */\n    eslint?: RollupEslintOptions & {\n        /**\n         * Disable use of configuration from .eslintrc.*\n         */\n        noEslintrc?: boolean;\n    };\n\n    commonjs?: RollupCommonJSOptions;\n    nodeResolve?: RollupNodeResolveOptions;\n\n    /**\n     * TODO:\n     *  rollup-plugin-styles is no longer actively update,\n     *  Try to replace rollup-plugin-styles with new plugin.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    styles?: any;\n\n    /**\n     * Extra rollup options.\n     */\n    rollup?: Exclude<TRollupOptions, \"output\" | \"input\">;\n\n    /**\n     * Output options.\n     */\n    bundle?: TBundleConfig[];\n\n    /**\n     * Overwrite bundle config\n     */\n    bundleOverwrite?: (b: TBundleConfig) => TBundleConfig;\n}\n\nexport type TRollupOptions = Omit<RollupOptions, \"input\"> & {\n    input: string;\n};\n\n/**\n * Configuration define helper.\n * @param options\n */\nexport function defineConfig(options: Config) {\n    return options;\n}\n\n/**\n * Read config from project.\n * @param configPath\n * @param pkgJson\n */\nexport async function tryReadConfig({\n    configPath,\n    pkgJson,\n}: {\n    configPath?: string;\n    pkgJson: IPackageJson;\n}): Promise<Config> {\n    const _cwd = process.cwd();\n\n    let config: Config;\n\n    if (!configPath) {\n        for await (const configFile of Configs) {\n            try {\n                const configFilePath = nodePath.join(_cwd, configFile);\n                await nodeFs.access(configFilePath);\n                configPath = configFilePath;\n                break;\n            } catch (e: unknown) {\n                // TODO: Skip error\n            }\n        }\n    }\n\n    if (configPath) {\n        config = module_.import_<Config>(configPath);\n\n        if (!config.bundle) {\n            Object.assign(config, {\n                bundle: getOutputFromPackageJson(\n                    pkgJson,\n                    config.bundleOverwrite,\n                ),\n            });\n        }\n\n        if (pkgJson.types) {\n            Object.assign(config, { dtsRollup: true });\n        }\n\n        return config;\n    } else {\n        return {\n            dtsRollup: !!pkgJson.types,\n            bundle: getOutputFromPackageJson(pkgJson),\n        };\n    }\n}\n\n","import dotenv, { type DotenvPopulateInput } from \"dotenv\";\nimport dotenvExpand from \"dotenv-expand\";\n\nexport default function loadEnv(input: DotenvPopulateInput = {}) {\n    const config = dotenv.config({\n        processEnv: input,\n    });\n    dotenvExpand.expand(config);\n}\n","import readline from \"node:readline\";\n\n/**\n * Split text by length.\n * @param str\n * @param len\n */\nexport function strSplitByLength(str: string, len: number): string[] {\n    const result = str.match(new RegExp(`(.{1,${len}})`, \"g\"));\n    return result ?? [];\n}\n\n/** @link https://github.com/chalk/strip-ansi/blob/main/index.js */\nexport function stripAnsi(\n    text: string,\n    { onlyFirst }: { onlyFirst: boolean } = { onlyFirst: true },\n) {\n    const pattern = [\n        \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n        \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\",\n    ].join(\"|\");\n    const regexp = new RegExp(pattern, onlyFirst ? undefined : \"g\");\n    return text.replace(regexp, \"\");\n}\n\nexport default class Terminal {\n    private readonly stdin = process.stdin;\n    private readonly stdout = process.stdout;\n\n    private x: number;\n    private y: number;\n\n    private maxCols: number;\n\n    private readonly rl: readline.Interface;\n\n    constructor() {\n        this.rl = readline.createInterface({\n            input: this.stdin,\n            output: this.stdout,\n            historySize: 0,\n            removeHistoryDuplicates: true,\n            tabSize: 4,\n            prompt: \"\",\n            terminal: process.stdout.isTTY,\n        });\n\n        const pos = this.rl.getCursorPos();\n        this.x = pos.cols;\n        this.y = pos.rows;\n        this.maxCols =\n            process.stdout.columns > 60 ? 60 : process.stdout.columns;\n    }\n\n    private _write(content: string) {\n        readline.clearScreenDown(this.stdin);\n        const segments = strSplitByLength(content, this.maxCols);\n        segments.forEach((text) => {\n            this.rl.write(text);\n            this.y += 1;\n        });\n\n        return this;\n    }\n\n    public nextLine() {\n        this.y += 1;\n        this.rl.write(\"\\r\");\n        return this;\n    }\n\n    public clearLine(cb?: () => void) {\n        process.stdout.cursorTo(0);\n        process.stdout.clearLine(1, () => {\n            cb?.();\n        });\n        return this;\n    }\n\n    public writeSameLine(content: string) {\n        this.clearLine(() => {\n            this._write(content);\n        });\n        return this;\n    }\n\n    public writeLine(\n        content: string,\n        options: { endWithNewLine: boolean } = {\n            endWithNewLine: false,\n        },\n    ) {\n        this._write(content);\n        if (options.endWithNewLine) {\n            this.nextLine();\n        }\n        return this;\n    }\n\n    public clearScreen() {\n        this.x = 0;\n        this.y = 0;\n        readline.cursorTo(this.stdin, this.x, this.y);\n        readline.clearScreenDown(this.stdin);\n        return this;\n    }\n\n    public box(content: string | string[]) {\n        this.writeLine(\n            `╭${Array(this.maxCols - 2)\n                .fill(\"─\")\n                .join(\"\")}╮`,\n        );\n        this.nextLine();\n        const padding = 4;\n        const writeCenter = (text: string) => {\n            const originLen = text.length;\n            const stripLen = stripAnsi(text).length;\n\n            const len = stripAnsi(text).length - (originLen - stripLen) - 0;\n            const restLen = this.maxCols - padding * 2;\n\n            if (restLen < len) {\n                strSplitByLength(text, restLen).forEach((t) => {\n                    writeCenter(t);\n                });\n            } else {\n                const left = Math.ceil((restLen - len) / 2);\n                const leftPadding =\n                    \"│\" +\n                    Array(left + padding - 1)\n                        .fill(\" \")\n                        .join(\"\");\n                const rightPadding =\n                    Array(restLen - left - len + padding - 1)\n                        .fill(\" \")\n                        .join(\"\") + \"│\";\n\n                this.writeLine(`${leftPadding}${text}${rightPadding}`);\n                this.nextLine();\n            }\n        };\n        const contents = [\n            \" \",\n            typeof content === \"string\" ? content : content,\n            \" \",\n        ].flat();\n        contents.forEach((t) => {\n            writeCenter(t);\n        });\n        this.writeLine(\n            `╰${Array(this.maxCols - 2)\n                .fill(\"─\")\n                .join(\"\")}╯`,\n        );\n        this.nextLine();\n        return this;\n    }\n}\n\n","import Terminal from \"@/terminal\";\nimport { colors } from \"@nfts/nodeutils\";\n\nclass Log {\n    public readonly term: Terminal;\n\n    constructor({ term }: { term: Terminal }) {\n        this.term = term;\n    }\n\n    info(text: string) {\n        if (process.env.DEBUG) {\n            this.term.writeLine(\n                `${colors.magenta(colors.bold(\"INFO\"))} ▶︎ ${text}`,\n            );\n            term.nextLine();\n        }\n    }\n\n    debug(text: string) {\n        if (process.env.DEBUG) {\n            this.term.writeLine(\n                `${colors.magenta(colors.bold(\"DEBUG\"))} ▶︎ ${text}`,\n            );\n            term.nextLine();\n        }\n    }\n\n    verbose(text: string) {\n        if (process.env.VERBOSE) {\n            this.term.writeLine(\n                `${colors.magenta(colors.bold(\"VERBOSE\"))} ▶︎ ${text}`,\n            );\n            term.nextLine();\n        }\n    }\n\n    error(text: string) {\n        this.term.writeLine(`${colors.red(colors.bold(\"ERROR\"))}`);\n        term.nextLine();\n        this.term.writeLine(`${text}`);\n        term.nextLine();\n    }\n\n    warn(text: string) {\n        this.term.writeLine(`${colors.yellow(colors.bold(\"WARN\"))} ▶︎ ${text}`);\n        term.nextLine();\n    }\n}\n\nconst term = new Terminal();\n\nexport default new Log({ term });\n\n","import nodePath from \"node:path\";\nimport type { RollupOptions } from \"rollup\";\n\nexport const cwd = () => process.cwd();\n\nexport const isSameRollupInput = (\n    input1: RollupOptions[\"input\"],\n    input2: RollupOptions[\"input\"],\n) => {\n    const type1 = typeof input1;\n    const type2 = typeof input2;\n\n    if (type1 !== type2) {\n        return false;\n    }\n\n    if (Array.isArray(input1) && Array.isArray(input2)) {\n        return input1.toString() === input2.toString();\n    }\n\n    return input1 === input2;\n};\n\n/**\n * Convert \"x1,x2,x3\" to [\"x1\", \"x2\", \"x3\"]\n * @param input\n */\nexport const normalizeCliInput = (input: string) => {\n    return input.trimStart().trimEnd().split(\",\").filter(Boolean);\n};\n\nexport function resolveDtsEntryFromEntry(\n    declarationDir: string,\n    entry: string,\n) {\n    let entryUnshiftRoot = nodePath\n        .join(cwd(), entry)\n        .replace(cwd() + nodePath.sep, \"\")\n        .split(nodePath.sep)\n        .slice(1)\n        .join(nodePath.sep)\n        .replace(\".ts\", \".d.ts\");\n\n    if (!entryUnshiftRoot.endsWith(\".d.ts\")) {\n        entryUnshiftRoot += \".d.ts\";\n    }\n\n    return nodePath.join(cwd(), declarationDir, entryUnshiftRoot);\n}\n\n/**\n * Serialize async tasks.\n * @param tasks\n */\n// eslint-disable-next-line\nexport async function serialize(tasks: (() => Promise<any>)[]) {\n    return tasks.reduce((promise, next) => {\n        return promise.then(() => {\n            return next();\n        });\n    }, Promise.resolve());\n}\n\n","import * as CONSTANTS from \"@/constants\";\nimport log from \"@/log\";\nimport { resolveDtsEntryFromEntry } from \"@/utils\";\nimport {\n    Extractor,\n    ExtractorConfig,\n    ExtractorLogLevel,\n    ExtractorMessage,\n} from \"@microsoft/api-extractor\";\nimport { file as File, colors, ms } from \"@nfts/nodeutils\";\nimport nodeFs from \"node:fs/promises\";\nimport nodePath from \"node:path\";\nimport ts, {\n    createIncrementalCompilerHost,\n    createIncrementalProgram,\n    sys,\n    type CompilerOptions,\n} from \"typescript\";\n\nexport function createCompilerProgram(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n): ts.BuilderProgram | undefined {\n    const config = ts.getParsedCommandLineOfConfigFile(\n        tsconfig,\n        tsConfigCompilerOptions,\n        {\n            useCaseSensitiveFileNames: true,\n            getCurrentDirectory: sys.getCurrentDirectory,\n            readDirectory: sys.readDirectory,\n            fileExists: sys.fileExists,\n            readFile: sys.readFile,\n            onUnRecoverableConfigFileDiagnostic: function (\n                diagnostic: ts.Diagnostic,\n            ): void {\n                console.error(\n                    `onUnRecoverableConfigFileDiagnostic`,\n                    diagnostic.messageText,\n                );\n            },\n        },\n    );\n\n    const host = createIncrementalCompilerHost(tsConfigCompilerOptions);\n\n    if (config) {\n        return createIncrementalProgram({\n            host,\n            options: {\n                ...config.options,\n                noEmit: false,\n            },\n            rootNames: config.fileNames,\n            projectReferences: config.projectReferences,\n            configFileParsingDiagnostics:\n                ts.getConfigFileParsingDiagnostics(config),\n        });\n    }\n}\n\nexport function emitOnlyDeclarations(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n) {\n    const program = createCompilerProgram(tsConfigCompilerOptions, tsconfig);\n    if (program) {\n        program.emit(undefined);\n    }\n}\n\nexport interface IDtsGenOptions {\n    input: string;\n    tsConfigFile?: string;\n    dtsFileName?: string;\n    watch?: boolean;\n}\n\nexport async function dtsGen({\n    input,\n    watch,\n    dtsFileName,\n    tsConfigFile = CONSTANTS.tsconfig,\n}: IDtsGenOptions) {\n    // PKG-JSON\n    const packageJsonFullPath = nodePath.resolve(\n        process.cwd(),\n        CONSTANTS.packageJson,\n    );\n\n    const start = Date.now();\n\n    emitOnlyDeclarations(\n        {\n            declaration: true,\n            emitDeclarationOnly: true,\n            declarationDir: CONSTANTS.dtsDir,\n            incremental: true,\n        },\n        tsConfigFile,\n    );\n\n    const ext = nodePath.extname(input);\n\n    const mainEntry = CONSTANTS.dtsDir\n        ? resolveDtsEntryFromEntry(CONSTANTS.dtsDir, input)\n        : ext\n        ? input.replace(nodePath.extname(input), \".d.ts\")\n        : `${input}.d.ts`;\n\n    const content = await nodeFs.readFile(mainEntry);\n\n    // Fix #1\n    if (content.toString() === \"\") {\n        return;\n    }\n\n    const trimmedFile = dtsFileName || CONSTANTS.dtsEntry;\n\n    const config = ExtractorConfig.prepare({\n        configObjectFullPath: undefined,\n        packageJsonFullPath: packageJsonFullPath,\n        ignoreMissingEntryPoint: true,\n        configObject: {\n            projectFolder: process.cwd(),\n            compiler: {\n                tsconfigFilePath: tsConfigFile,\n            },\n            mainEntryPointFilePath: mainEntry,\n            dtsRollup: {\n                enabled: true,\n                publicTrimmedFilePath: trimmedFile,\n            },\n            docModel: {\n                enabled: false,\n            },\n            tsdocMetadata: {\n                enabled: false,\n            },\n        },\n    });\n\n    const extractorResult = Extractor.invoke(config, {\n        localBuild: true,\n        showDiagnostics: false,\n        showVerboseMessages: false,\n        typescriptCompilerFolder: nodePath.join(\n            require.resolve(\"typescript\"),\n            \"../..\",\n        ),\n        messageCallback(message: ExtractorMessage) {\n            message.logLevel = \"none\" as ExtractorLogLevel.None;\n        },\n    });\n\n    if (extractorResult.succeeded) {\n        // TODO: Add verbose message\n    } else {\n        // TODO: Throw whe meet error\n    }\n\n    File.rmdirSync(CONSTANTS.dtsDir);\n\n    if (!watch) {\n        const duration = Date.now() - start;\n        const message = `${colors.bgBlack(\n            colors.bold(nodePath.relative(process.cwd(), input)),\n        )} ${colors.bold(\"->\")} ${nodePath.relative(\n            process.cwd(),\n            trimmedFile,\n        )} (${ms(duration)})`;\n\n        log.info(message);\n    }\n}\n\n","import type { Config, TRollupOptions } from \"@/configuration\";\nimport * as CONSTANTS from \"@/constants\";\nimport { dtsGen } from \"@/dts\";\nimport log from \"@/log\";\nimport { cwd, isSameRollupInput, normalizeCliInput, serialize } from \"@/utils\";\nimport { colors, ms } from \"@nfts/nodeutils\";\nimport type { IPackageJson } from \"@nfts/pkg-json\";\nimport alias, { RollupAliasOptions } from \"@nfts/plugin-alias\";\nimport cleanup, { RollupCleanupOptions } from \"@nfts/plugin-cleanup\";\nimport esbuild from \"@nfts/plugin-esbuild\";\nimport type { ITSConfigJson } from \"@nfts/tsc-json\";\nimport commonjs from \"@rollup/plugin-commonjs\";\nimport eslint from \"@rollup/plugin-eslint\";\nimport nodeResolve from \"@rollup/plugin-node-resolve\";\nimport Module from \"node:module\";\nimport nodePath from \"node:path\";\nimport {\n    rollup,\n    watch,\n    type RollupOptions,\n    type RollupOutput,\n    type RollupWatchOptions,\n} from \"rollup\";\n// import styles from \"rollup-plugin-styles\";\nimport styles from \"@nfts/plugin-styles\";\n\n/**\n *\n * @desc Externals function for rollup.externals,\n * by default, all devDependencies and dependencies in package.json\n * will be ignored.\n *\n */\nexport const externalsGenerator = (\n    externals: string[] = [],\n    pkgJson: IPackageJson,\n) => {\n    /**\n     * Default exclude deps and peerDeps\n     */\n    const { dependencies = {}, peerDependencies = {} } = pkgJson;\n    const nativeModules = Module.builtinModules\n        .concat(Module.builtinModules.map((m) => `node:${m}`))\n        .concat(\n            Object.keys(dependencies).concat(Object.keys(peerDependencies)),\n        );\n\n    return (id: string) => {\n        return externals?.includes(id) || nativeModules.includes(id);\n    };\n};\n\n/**\n * Default plugins.\n **/\nexport const applyPlugins = (\n    options?: Pick<\n        Config,\n        \"eslint\" | \"nodeResolve\" | \"commonjs\" | \"esbuild\" | \"styles\"\n    > & {\n        clean?: RollupCleanupOptions;\n        alias?: RollupAliasOptions;\n    },\n) => {\n    return [\n        cleanup(options?.clean),\n        styles(options?.styles),\n        alias(options?.alias ?? { alias: {} }),\n        // @TODO\n        // postcssPlugin({ cssModules: true }),\n        esbuild(\n            Object.assign({\n                options: options?.esbuild,\n                tsConfigFile: nodePath.join(cwd(), \"tsconfig.json\"),\n            }),\n        ),\n        nodeResolve(\n            Object.assign(\n                {\n                    rootDir: cwd(),\n                    preferBuiltins: false,\n                    extensions: CONSTANTS.Extensions,\n                },\n                options?.nodeResolve ?? {},\n            ),\n        ),\n        commonjs(\n            Object.assign(\n                { extensions: CONSTANTS.Extensions },\n                options?.commonjs ?? {},\n            ),\n        ),\n        eslint(Object.assign({}, options?.eslint ?? {})),\n        // bundleProgress(),\n    ].filter(Boolean);\n};\n\nexport type TBundleOutput =\n    | {\n          duration: number;\n          input: string;\n      }\n    | RollupOutput;\n\n/**\n *\n * Get all bundle tasks.\n *\n */\nexport const bundle = async ({\n    options,\n    config,\n    pkgJson,\n}: {\n    options: TRollupOptions | TRollupOptions[];\n    config: Config;\n    pkgJson: IPackageJson;\n}) => {\n    const bundles: (() => Promise<TBundleOutput>)[] = [];\n\n    if (!Array.isArray(options)) {\n        options = [options];\n    }\n\n    for await (const option of options) {\n        const start = Date.now();\n        const bundle_ = await rollup(option);\n        let { output } = option;\n        const { input } = option;\n        if (output) {\n            if (output && !Array.isArray(output)) {\n                output = [output];\n            }\n\n            for (const output_ of output) {\n                // Add bundle task\n                bundles.push(async () => {\n                    await bundle_.generate(output_);\n                    const output = await bundle_.write(output_);\n                    const duration = Date.now() - start;\n                    const message = `${colors.bgBlack(\n                        colors.bold(nodePath.relative(cwd(), input)),\n                    )} ${colors.bold(\"->\")} ${output_.file as string} (${ms(\n                        duration,\n                    )})`;\n\n                    log.info(`${message}`);\n\n                    return {\n                        ...output,\n                        duration,\n                    };\n                });\n            }\n\n            // One bundle one dts.\n            bundles.push(async () => {\n                const start = Date.now();\n                await dts({\n                    config,\n                    pkgJson,\n                    input: option[\"input\"],\n                });\n                return {\n                    // TODO: Add input value.\n                    input: \"\",\n                    duration: Date.now() - start,\n                };\n            });\n        } else {\n            log.verbose(\n                `Output not found for input '${option.input}', skip...`,\n            );\n        }\n    }\n\n    return bundles;\n};\n\n/**\n *\n * Dev process\n *\n */\nexport const watch_ = async (\n    options: RollupWatchOptions | RollupWatchOptions[],\n    {\n        config,\n        pkgJson,\n    }: {\n        config: Config;\n        pkgJson: IPackageJson;\n    },\n) => {\n    const watcher = watch(options);\n    let firstRun = true;\n\n    try {\n        await new Promise<void>(() => {\n            watcher\n                .on(`event`, (e) => {\n                    const { code } = e;\n                    switch (code) {\n                        case \"START\": {\n                            firstRun && log.info(\"Start watching process\");\n                            break;\n                        }\n\n                        case \"BUNDLE_START\": {\n                            break;\n                        }\n\n                        case \"BUNDLE_END\": {\n                            const { input, output, duration } = e;\n                            log.info(\n                                `${input} -> ${output\n                                    .map((outputPath) =>\n                                        nodePath.relative(\n                                            process.cwd(),\n                                            outputPath,\n                                        ),\n                                    )\n                                    .join(\", \")}`,\n                            );\n                            log.info(`Bundle end in ${ms(duration)}`);\n                            break;\n                        }\n\n                        case \"END\": {\n                            firstRun = false;\n                            const startTime = new Date().getTime();\n\n                            const input = Array.isArray(options)\n                                ? (options[0][\"input\"] as string)\n                                : (options.input as string);\n\n                            dts({\n                                input,\n                                config,\n                                pkgJson,\n                            }).then(() => {\n                                log.info(`${input} -> ${pkgJson.types}`);\n                                log.info(\n                                    `Dts end in ${ms(Date.now() - startTime)}`,\n                                );\n                            });\n                            break;\n                        }\n                        case \"ERROR\": {\n                            log.error(e.error.message);\n                            break;\n                        }\n                    }\n                })\n                .on(\"change\", (file) => {\n                    log.info(`changed: ${file}`);\n                })\n                .on(\"restart\", () => log.info(`Restart`));\n        });\n    } catch (e) {\n        //\n    }\n};\n\nasync function dts({\n    input,\n    config,\n    pkgJson,\n}: {\n    input: string;\n    config: Config;\n    pkgJson: IPackageJson;\n}): Promise<void> {\n    const { module, main, types } = pkgJson;\n    const output = module || main;\n\n    const inputBasename = nodePath.basename(input);\n    const outputBasepath = output\n        ? nodePath.dirname(output)\n        : CONSTANTS.outputDir;\n\n    const ext = nodePath.extname(inputBasename);\n\n    const outputBasename = ext\n        ? inputBasename.replace(ext, \".d.ts\")\n        : `${inputBasename ?? \"index\"}.d.ts`;\n\n    if (config.dtsRollup) {\n        await dtsGen({\n            input,\n            watch: config.watch,\n            tsConfigFile: config.project ?? CONSTANTS.tsconfig,\n            dtsFileName:\n                types ||\n                nodePath.resolve(cwd(), outputBasepath, outputBasename),\n        });\n    }\n}\n\nexport async function startBundle({\n    config,\n    pkgJson,\n    tsConfig,\n}: {\n    config: Config;\n    pkgJson: IPackageJson;\n    tsConfig: ITSConfigJson;\n}) {\n    const paths = tsConfig.compilerOptions?.paths ?? {};\n\n    const {\n        eslint,\n        commonjs,\n        nodeResolve,\n        esbuild,\n        styles,\n        rollup: rollupOpt = {} as TRollupOptions,\n        // Options\n        externals,\n        minify,\n        sourcemap,\n        input: cliInput,\n        watch,\n    } = config;\n\n    const rollupPlugins = applyPlugins({\n        eslint,\n        commonjs,\n        nodeResolve,\n        esbuild: Object.assign(\n            { minify, target: config.target ?? \"ES2015\" },\n            esbuild ?? {},\n        ),\n        styles,\n        alias: { alias: paths },\n        clean: { active: !watch },\n    });\n\n    const externalsFn = externalsGenerator(externals, pkgJson);\n\n    let bundles: TRollupOptions[] = [];\n\n    const { plugins: extraPlugins = [], ...rollupOpts } = rollupOpt;\n\n    const rollupOptionWithoutInputOutput: Omit<\n        RollupOptions,\n        \"input\" | \"output\"\n    > = {\n        perf: true,\n        treeshake: true,\n        strictDeprecations: true,\n        plugins: [...rollupPlugins, extraPlugins],\n        external: externalsFn,\n        ...(rollupOpts ?? {}),\n    };\n\n    if (config.bundle) {\n        bundles = config.bundle.reduce((options, bundle) => {\n            const { input: bundleInput, ...otherProps } = bundle;\n\n            const option = {\n                input:\n                    bundleInput ||\n                    (cliInput\n                        ? normalizeCliInput(cliInput as string)\n                        : CONSTANTS.input),\n                output: [{ ...otherProps, sourcemap }],\n                ...rollupOptionWithoutInputOutput,\n            } as TRollupOptions;\n\n            if (options.length === 0) {\n                return [option];\n            }\n\n            const i = options.findIndex((o) =>\n                isSameRollupInput(o.input, option.input),\n            );\n\n            if (i === -1) {\n                options.push(option);\n            } else {\n                options[i] = Object.assign({}, options[i], {\n                    output: [\n                        ...(options[i].output as TRollupOptions[]),\n                        { ...otherProps, sourcemap },\n                    ],\n                });\n            }\n\n            return options;\n        }, [] as TRollupOptions[]);\n    }\n\n    if (watch) {\n        await watch_(bundles, { config, pkgJson });\n    } else {\n        const tasks = await bundle({\n            options: bundles,\n            config,\n            pkgJson,\n        });\n        await serialize(tasks);\n    }\n}\n\n","import type { ITSConfigJson } from \"@nfts/tsc-json\";\nimport {\n    parseJsonSourceFileConfigFileContent,\n    readJsonConfigFile,\n    sys,\n} from \"typescript\";\n\nexport function loadTsConfigJson(path = \"./tsconfig.json\"): ITSConfigJson {\n    const sourceFile = readJsonConfigFile(path, sys.readFile);\n    const parsedCommandLine = parseJsonSourceFileConfigFileContent(\n        sourceFile,\n        {\n            useCaseSensitiveFileNames: true,\n            readDirectory: sys.readDirectory,\n            readFile: sys.readFile,\n            fileExists: sys.fileExists,\n        },\n        \".\",\n    );\n\n    const { raw = {}, options } = parsedCommandLine;\n\n    return {\n        ...raw,\n        compilerOptions: options,\n    };\n}\n\n","import { tryReadConfig, type CLIOptions } from \"@/configuration\";\nimport * as CONSTANTS from \"@/constants\";\nimport loadEnv from \"@/env\";\nimport log from \"@/log\";\nimport { startBundle } from \"@/rollup\";\nimport { loadTsConfigJson } from \"@/tsconfig\";\nimport { json as Json, parser } from \"@nfts/nodeutils\";\nimport type { IPackageJson } from \"@nfts/pkg-json\";\nimport nodePath from \"node:path\";\n\nasync function cli(args: string[]) {\n    const [, ..._args] = args;\n    const pkgJson = Json.readJSONSync<IPackageJson>(CONSTANTS.packageJson);\n\n    const beatsPkgJson = Json.readJSONSync<IPackageJson>(\n        nodePath.resolve(require.resolve(\"..\"), \"../../package.json\"),\n    );\n\n    const {\n        project,\n        config: configPath,\n        ...inputOptions\n    } = parser<CLIOptions>(_args);\n\n    // Load `.env` file if possible.\n    loadEnv();\n\n    log.info(`@nfts/beats v${beatsPkgJson.version}`);\n    log.info(`tsconfig from ${project || CONSTANTS.tsconfig}`);\n\n    // Read `tsconfig.json`\n    const tsConfig = loadTsConfigJson(project ?? CONSTANTS.tsconfig);\n\n    if (configPath) {\n        log.info(`beats config from ${configPath}`);\n    }\n\n    // Load `beats.config.json`.\n    const config = await tryReadConfig({\n        configPath,\n        pkgJson,\n    });\n\n    return startBundle({\n        config: {\n            ...config,\n            ...inputOptions,\n            project,\n        },\n        pkgJson,\n        tsConfig,\n    });\n}\n\ncli(process.argv.slice(1))\n    .then(() => {\n        process.exit(0);\n    })\n    .catch((e) => {\n        console.error(e);\n        process.exit();\n    });\n\n"],"names":["__knownSymbol","__forAwait","CONSTANTS.esmExt","CONSTANTS.cjsExt","CONSTANTS.esmMiddleNames","CONSTANTS.cjsMiddleNames","output","CONSTANTS.output","__defProp","__defNormalProp","__publicField","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__spreadValues","__spreadProps","CONSTANTS.tsconfig","CONSTANTS.packageJson","CONSTANTS.dtsDir","CONSTANTS.dtsEntry","File","__objRest","CONSTANTS.Extensions","CONSTANTS.outputDir","CONSTANTS.input","Json"],"mappings":";;;;;;;;;;;;;;;;;;AAAO,MAAM,QAAQ,GAAG,iBAAiB,CAAC;AACnC,MAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,MAAM,QAAQ,GAAG,YAAY,CAAC;AAC9B,MAAM,MAAM,GAAG,YAAY,CAAC;AAC5B,MAAM,KAAK,GAAG,aAAa,CAAC;AAC5B,MAAM,SAAS,GAAG,KAAK,CAAC;AACxB,MAAM,MAAM,GAAG,MAAM,CAAC;AACtB,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChC,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChC,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACzC,MAAM,cAAc,GAAG,CAAC,OAAO,CAAC,CAAC;AACjC,MAAM,UAAU,GAAG;AAC1B,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAAE,OAAO;AACT,EAAE,MAAM;AACR,EAAE,MAAM;AACR,EAAE,MAAM;AACR,EAAE,MAAM;AACR,EAAE,OAAO;AACT,CAAC;;ACtBD,IAAIA,eAAa,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACtC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC;AAClB,EAAE,MAAM,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,iBAAiB,CAAC,CAAC;AACpD,CAAC,CAAC;AACF,IAAIC,YAAU,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,KAAK,CAAC,EAAE,GAAG,GAAG,CAACD,eAAa,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAACA,eAAa,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AAK1Y,SAAS,qBAAqB,CAAC,MAAM,EAAE;AACvC,EAAE,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAIE,MAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAClE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,IAAIC,MAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtC,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAIC,cAAwB,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACtE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,IAAIC,cAAwB,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACtE,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD,SAAS,wBAAwB,CAAC,OAAO,EAAE,qBAAqB,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAC7E,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC;AACtC,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAACC,QAAM,KAAK;AACnD,IAAI,MAAM,MAAM,GAAG,qBAAqB,CAACA,QAAM,CAAC,CAAC;AACjD,IAAI,IAAIA,QAAM,KAAK,GAAG,EAAE;AACxB,MAAMA,QAAM,GAAGC,MAAgB,CAAC;AAChC,KAAK;AACL,IAAI,OAAO,qBAAqB,CAAC;AACjC,MAAM,MAAM;AACZ,MAAM,IAAI,EAAED,QAAM;AAClB,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL,CAAC;AACD,MAAM,OAAO,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AACrE,SAAS,YAAY,CAAC,OAAO,EAAE;AACtC,EAAE,OAAO,OAAO,CAAC;AACjB,CAAC;AACM,eAAe,aAAa,CAAC;AACpC,EAAE,UAAU;AACZ,EAAE,OAAO;AACT,CAAC,EAAE;AACH,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAC7B,EAAE,IAAI,MAAM,CAAC;AACb,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,IAAI;AACR,MAAM,KAAK,IAAI,IAAI,GAAGL,YAAU,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE;AACrH,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;AACtC,QAAQ,IAAI;AACZ,UAAU,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACjE,UAAU,MAAM,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AAC9C,UAAU,UAAU,GAAG,cAAc,CAAC;AACtC,UAAU,MAAM;AAChB,SAAS,CAAC,OAAO,CAAC,EAAE;AACpB,SAAS;AACT,OAAO;AACP,KAAK,CAAC,OAAO,IAAI,EAAE;AACnB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,KAAK,SAAS;AACd,MAAM,IAAI;AACV,QAAQ,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9D,OAAO,SAAS;AAChB,QAAQ,IAAI,KAAK;AACjB,UAAU,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACzC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACxB,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,EAAE,wBAAwB;AACxC,UAAU,OAAO;AACjB,UAAU,MAAM,CAAC,eAAe;AAChC,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK;AACL,IAAI,IAAI,OAAO,CAAC,KAAK,EAAE;AACvB,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,MAAM;AACT,IAAI,OAAO;AACX,MAAM,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK;AAChC,MAAM,MAAM,EAAE,wBAAwB,CAAC,OAAO,CAAC;AAC/C,KAAK,CAAC;AACN,GAAG;AACH;;AC1Fe,SAAS,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE;AAC5C,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAI,UAAU,EAAE,KAAK;AACrB,GAAG,CAAC,CAAC;AACL,EAAE,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B;;ACPA,IAAIO,WAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAIC,iBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAGD,WAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAIE,eAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK;AACzC,EAAED,iBAAe,CAAC,GAAG,EAAE,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;AACxE,EAAE,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEK,SAAS,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE;AAC3C,EAAE,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC7D,EAAE,OAAO,MAAM,IAAI,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;AACtC,CAAC;AACM,SAAS,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE;AACrE,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,8HAA8H;AAClI,IAAI,0DAA0D;AAC9D,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,EAAE,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,SAAS,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;AAC/D,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAClC,CAAC;AACc,MAAM,QAAQ,CAAC;AAC9B,EAAE,WAAW,GAAG;AAChB,IAAIC,eAAa,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAChD,IAAIA,eAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAClD,IAAIA,eAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAIA,eAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAIA,eAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACnC,IAAIA,eAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9B,IAAI,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC;AACvC,MAAM,KAAK,EAAE,IAAI,CAAC,KAAK;AACvB,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;AACzB,MAAM,WAAW,EAAE,CAAC;AACpB,MAAM,uBAAuB,EAAE,IAAI;AACnC,MAAM,OAAO,EAAE,CAAC;AAChB,MAAM,MAAM,EAAE,EAAE;AAChB,MAAM,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;AACpC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACvC,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AACtB,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AACtB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;AAC7E,GAAG;AACH,EAAE,MAAM,CAAC,OAAO,EAAE;AAClB,IAAI,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7D,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAClB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,QAAQ,GAAG;AACb,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,SAAS,CAAC,EAAE,EAAE;AAChB,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM;AACtC,MAAM,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC;AACjC,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,aAAa,CAAC,OAAO,EAAE;AACzB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;AACzB,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3B,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,SAAS,CAAC,OAAO,EAAE,OAAO,GAAG;AAC/B,IAAI,cAAc,EAAE,KAAK;AACzB,GAAG,EAAE;AACL,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,IAAI,IAAI,OAAO,CAAC,cAAc,EAAE;AAChC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,WAAW,GAAG;AAChB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,IAAI,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,GAAG,CAAC,OAAO,EAAE;AACf,IAAI,IAAI,CAAC,SAAS;AAClB,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACtE,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC;AACtB,IAAI,MAAM,WAAW,GAAG,CAAC,IAAI,KAAK;AAClC,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AACpC,MAAM,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;AAC9C,MAAM,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AACtE,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AACjD,MAAM,IAAI,OAAO,GAAG,GAAG,EAAE;AACzB,QAAQ,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AACvD,UAAU,WAAW,CAAC,CAAC,CAAC,CAAC;AACzB,SAAS,CAAC,CAAC;AACX,OAAO,MAAM;AACb,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AACpD,QAAQ,MAAM,WAAW,GAAG,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpF,QAAQ,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AACrG,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxB,OAAO;AACP,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,GAAG;AACT,MAAM,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,GAAG,OAAO;AACrD,MAAM,GAAG;AACT,KAAK,CAAC,IAAI,EAAE,CAAC;AACb,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC5B,MAAM,WAAW,CAAC,CAAC,CAAC,CAAC;AACrB,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,SAAS;AAClB,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACtE,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;;ACzHA,IAAIF,WAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAIC,iBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAGD,WAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAI,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK;AACzC,EAAEC,iBAAe,CAAC,GAAG,EAAE,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;AACxE,EAAE,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAGF,MAAM,GAAG,CAAC;AACV,EAAE,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC/B,IAAI,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAChC,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACtB,GAAG;AACH,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;AAC3B,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS;AACzB,QAAQ,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACrE,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,KAAK;AACL,GAAG;AACH,EAAE,KAAK,CAAC,IAAI,EAAE;AACd,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;AAC3B,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS;AACzB,QAAQ,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACtE,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,EAAE;AAChB,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE;AAC7B,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS;AACzB,QAAQ,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACxE,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,KAAK;AACL,GAAG;AACH,EAAE,KAAK,CAAC,IAAI,EAAE;AACd,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,GAAG;AACH,EAAE,IAAI,CAAC,IAAI,EAAE;AACb,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACtF,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;AACpB,GAAG;AACH,CAAC;AACD,MAAM,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC5B,UAAe,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC;;AChDzB,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,GAAG,EAAE,CAAC;AAChC,MAAM,iBAAiB,GAAG,CAAC,MAAM,EAAE,MAAM,KAAK;AACrD,EAAE,MAAM,KAAK,GAAG,OAAO,MAAM,CAAC;AAC9B,EAAE,MAAM,KAAK,GAAG,OAAO,MAAM,CAAC;AAC9B,EAAE,IAAI,KAAK,KAAK,KAAK,EAAE;AACvB,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACtD,IAAI,OAAO,MAAM,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC,QAAQ,EAAE,CAAC;AACnD,GAAG;AACH,EAAE,OAAO,MAAM,KAAK,MAAM,CAAC;AAC3B,CAAC,CAAC;AACK,MAAM,iBAAiB,GAAG,CAAC,KAAK,KAAK;AAC5C,EAAE,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAChE,CAAC,CAAC;AACK,SAAS,wBAAwB,CAAC,cAAc,EAAE,KAAK,EAAE;AAChE,EAAE,IAAI,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC/J,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC3C,IAAI,gBAAgB,IAAI,OAAO,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;AAChE,CAAC;AACM,eAAe,SAAS,CAAC,KAAK,EAAE;AACvC,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,IAAI,KAAK;AACzC,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM;AAC9B,MAAM,OAAO,IAAI,EAAE,CAAC;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AACxB;;AC7BA,IAAID,WAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAIG,YAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;AACzC,IAAIC,mBAAiB,GAAG,MAAM,CAAC,yBAAyB,CAAC;AACzD,IAAIC,qBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC;AACvD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AACnD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACzD,IAAIN,iBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAGD,WAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAIQ,gBAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC/B,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAChC,IAAI,IAAIF,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AAClC,MAAML,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,EAAE,IAAII,qBAAmB;AACzB,IAAI,KAAK,IAAI,IAAI,IAAIA,qBAAmB,CAAC,CAAC,CAAC,EAAE;AAC7C,MAAM,IAAIE,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AACpC,QAAQN,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL,EAAE,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACF,IAAIQ,eAAa,GAAG,CAAC,CAAC,EAAE,CAAC,KAAKN,YAAU,CAAC,CAAC,EAAEC,mBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AAgB3D,SAAS,qBAAqB,CAAC,uBAAuB,EAAE,QAAQ,EAAE;AACzE,EAAE,MAAM,MAAM,GAAG,EAAE,CAAC,gCAAgC;AACpD,IAAI,QAAQ;AACZ,IAAI,uBAAuB;AAC3B,IAAI;AACJ,MAAM,yBAAyB,EAAE,IAAI;AACrC,MAAM,mBAAmB,EAAE,GAAG,CAAC,mBAAmB;AAClD,MAAM,aAAa,EAAE,GAAG,CAAC,aAAa;AACtC,MAAM,UAAU,EAAE,GAAG,CAAC,UAAU;AAChC,MAAM,QAAQ,EAAE,GAAG,CAAC,QAAQ;AAC5B,MAAM,mCAAmC,EAAE,SAAS,UAAU,EAAE;AAChE,QAAQ,OAAO,CAAC,KAAK;AACrB,UAAU,CAAC,mCAAmC,CAAC;AAC/C,UAAU,UAAU,CAAC,WAAW;AAChC,SAAS,CAAC;AACV,OAAO;AACP,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,MAAM,IAAI,GAAG,6BAA6B,CAAC,uBAAuB,CAAC,CAAC;AACtE,EAAE,IAAI,MAAM,EAAE;AACd,IAAI,OAAO,wBAAwB,CAAC;AACpC,MAAM,IAAI;AACV,MAAM,OAAO,EAAEK,eAAa,CAACD,gBAAc,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE;AACjE,QAAQ,MAAM,EAAE,KAAK;AACrB,OAAO,CAAC;AACR,MAAM,SAAS,EAAE,MAAM,CAAC,SAAS;AACjC,MAAM,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;AACjD,MAAM,4BAA4B,EAAE,EAAE,CAAC,+BAA+B,CAAC,MAAM,CAAC;AAC9E,KAAK,CAAC,CAAC;AACP,GAAG;AACH,CAAC;AACM,SAAS,oBAAoB,CAAC,uBAAuB,EAAE,QAAQ,EAAE;AACxE,EAAE,MAAM,OAAO,GAAG,qBAAqB,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC;AAC3E,EAAE,IAAI,OAAO,EAAE;AACf,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACzB,GAAG;AACH,CAAC;AACM,eAAe,MAAM,CAAC;AAC7B,EAAE,KAAK;AACP,EAAE,KAAK;AACP,EAAE,WAAW;AACb,EAAE,YAAY,GAAGE,QAAkB;AACnC,CAAC,EAAE;AACH,EAAE,MAAM,mBAAmB,GAAG,QAAQ,CAAC,OAAO;AAC9C,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,IAAIC,WAAqB;AACzB,GAAG,CAAC;AACJ,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3B,EAAE,oBAAoB;AACtB,IAAI;AACJ,MAAM,WAAW,EAAE,IAAI;AACvB,MAAM,mBAAmB,EAAE,IAAI;AAC/B,MAAM,cAAc,EAAEC,MAAgB;AACtC,MAAM,WAAW,EAAE,IAAI;AACvB,KAAK;AACL,IAAI,YAAY;AAChB,GAAG,CAAC;AACJ,EAAc,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE;AACtC,EAAE,MAAM,SAAS,GAAsB,wBAAwB,CAACA,MAAgB,EAAE,KAAK,CAAC,CAA0E,CAAC;AACnK,EAAE,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnD,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;AACjC,IAAI,OAAO;AACX,GAAG;AACH,EAAE,MAAM,WAAW,GAAG,WAAW,IAAIC,QAAkB,CAAC;AACxD,EAAE,MAAM,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;AACzC,IAAI,oBAAoB,EAAE,KAAK,CAAC;AAChC,IAAI,mBAAmB;AACvB,IAAI,uBAAuB,EAAE,IAAI;AACjC,IAAI,YAAY,EAAE;AAClB,MAAM,aAAa,EAAE,OAAO,CAAC,GAAG,EAAE;AAClC,MAAM,QAAQ,EAAE;AAChB,QAAQ,gBAAgB,EAAE,YAAY;AACtC,OAAO;AACP,MAAM,sBAAsB,EAAE,SAAS;AACvC,MAAM,SAAS,EAAE;AACjB,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAQ,qBAAqB,EAAE,WAAW;AAC1C,OAAO;AACP,MAAM,QAAQ,EAAE;AAChB,QAAQ,OAAO,EAAE,KAAK;AACtB,OAAO;AACP,MAAM,aAAa,EAAE;AACrB,QAAQ,OAAO,EAAE,KAAK;AACtB,OAAO;AACP,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,eAAe,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;AACnD,IAAI,UAAU,EAAE,IAAI;AACpB,IAAI,eAAe,EAAE,KAAK;AAC1B,IAAI,mBAAmB,EAAE,KAAK;AAC9B,IAAI,wBAAwB,EAAE,QAAQ,CAAC,IAAI;AAC3C,MAAM,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;AACnC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,eAAe,CAAC,OAAO,EAAE;AAC7B,MAAM,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC;AAChC,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,IAAI,eAAe,CAAC,SAAS,EAAE,CAE9B;AACH,EAAEC,IAAI,CAAC,SAAS,CAACF,MAAgB,CAAC,CAAC;AACnC,EAAE,IAAI,CAAC,KAAK,EAAE;AACd,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;AACxC,IAAI,MAAM,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,OAAO;AACrC,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;AAC1D,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ;AAC/C,MAAM,OAAO,CAAC,GAAG,EAAE;AACnB,MAAM,WAAW;AACjB,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtB,GAAG;AACH;;AClJA,IAAIZ,WAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAIG,YAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;AACzC,IAAIC,mBAAiB,GAAG,MAAM,CAAC,yBAAyB,CAAC;AACzD,IAAIC,qBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC;AACvD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AACnD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACzD,IAAI,aAAa,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACtC,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC;AAClB,EAAE,MAAM,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,iBAAiB,CAAC,CAAC;AACpD,CAAC,CAAC;AACF,IAAIN,iBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAGD,WAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAIQ,gBAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC/B,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAChC,IAAI,IAAIF,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AAClC,MAAML,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,EAAE,IAAII,qBAAmB;AACzB,IAAI,KAAK,IAAI,IAAI,IAAIA,qBAAmB,CAAC,CAAC,CAAC,EAAE;AAC7C,MAAM,IAAIE,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AACpC,QAAQN,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL,EAAE,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACF,IAAIQ,eAAa,GAAG,CAAC,CAAC,EAAE,CAAC,KAAKN,YAAU,CAAC,CAAC,EAAEC,mBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,IAAIW,WAAS,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK;AACrC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,KAAK,IAAI,IAAI,IAAI,MAAM;AACzB,IAAI,IAAIT,cAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AACpE,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,EAAE,IAAI,MAAM,IAAI,IAAI,IAAID,qBAAmB;AAC3C,IAAI,KAAK,IAAI,IAAI,IAAIA,qBAAmB,CAAC,MAAM,CAAC,EAAE;AAClD,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAIE,cAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AACtE,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,KAAK;AACL,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,IAAI,UAAU,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AAmBnY,MAAM,kBAAkB,GAAG,CAAC,SAAS,GAAG,EAAE,EAAE,OAAO,KAAK;AAC/D,EAAE,MAAM,EAAE,YAAY,GAAG,EAAE,EAAE,gBAAgB,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC;AAC/D,EAAE,MAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;AAC1G,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACnE,GAAG,CAAC;AACJ,EAAE,OAAO,CAAC,EAAE,KAAK;AACjB,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/F,GAAG,CAAC;AACJ,CAAC,CAAC;AACK,MAAM,YAAY,GAAG,CAAC,OAAO,KAAK;AACzC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACrB,EAAE,OAAO;AACT,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;AACrD,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;AACrD,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;AACvF;AACA;AACA,IAAI,OAAO;AACX,MAAM,MAAM,CAAC,MAAM,CAAC;AACpB,QAAQ,OAAO,EAAE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,OAAO;AAC3D,QAAQ,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,eAAe,CAAC;AAC3D,OAAO,CAAC;AACR,KAAK;AACL,IAAI,WAAW;AACf,MAAM,MAAM,CAAC,MAAM;AACnB,QAAQ;AACR,UAAU,OAAO,EAAE,GAAG,EAAE;AACxB,UAAU,cAAc,EAAE,KAAK;AAC/B,UAAU,UAAU,EAAES,UAAoB;AAC1C,SAAS;AACT,QAAQ,CAAC,EAAE,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,WAAW,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AAC/E,OAAO;AACP,KAAK;AACL,IAAI,QAAQ;AACZ,MAAM,MAAM,CAAC,MAAM;AACnB,QAAQ,EAAE,UAAU,EAAEA,UAAoB,EAAE;AAC5C,QAAQ,CAAC,EAAE,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,QAAQ,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AAC5E,OAAO;AACP,KAAK;AACL,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACjG;AACA,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACpB,CAAC,CAAC;AACK,MAAM,MAAM,GAAG,OAAO;AAC7B,EAAE,OAAO;AACT,EAAE,MAAM;AACR,EAAE,OAAO;AACT,CAAC,KAAK;AACN,EAAE,MAAM,OAAO,GAAG,EAAE,CAAC;AACrB,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAC/B,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;AACxB,GAAG;AACH,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE;AACnH,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;AAChC,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC/B,MAAM,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,MAAM,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC9B,MAAM,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;AAC/B,MAAM,IAAI,MAAM,EAAE;AAClB,QAAQ,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC9C,UAAU,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5B,SAAS;AACT,QAAQ,KAAK,MAAM,OAAO,IAAI,MAAM,EAAE;AACtC,UAAU,OAAO,CAAC,IAAI,CAAC,YAAY;AACnC,YAAY,MAAM,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC5C,YAAY,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACzD,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;AAChD,YAAY,MAAM,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,OAAO;AAC7C,cAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;AAC1D,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE;AACzD,cAAc,QAAQ;AACtB,aAAa,CAAC,CAAC,CAAC,CAAC;AACjB,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACnC,YAAY,OAAOP,eAAa,CAACD,gBAAc,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;AAC9D,cAAc,QAAQ;AACtB,aAAa,CAAC,CAAC;AACf,WAAW,CAAC,CAAC;AACb,SAAS;AACT,QAAQ,OAAO,CAAC,IAAI,CAAC,YAAY;AACjC,UAAU,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACpC,UAAU,MAAM,GAAG,CAAC;AACpB,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;AAClC,WAAW,CAAC,CAAC;AACb,UAAU,OAAO;AACjB;AACA,YAAY,KAAK,EAAE,EAAE;AACrB,YAAY,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM;AACzC,WAAW,CAAC;AACZ,SAAS,CAAC,CAAC;AACX,OAAO,MAAM;AACb,QAAQ,GAAG,CAAC,OAAO;AACnB,UAAU,CAAC,4BAA4B,EAAE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;AACjE,SAAS,CAAC;AACV,OAAO;AACP,KAAK;AACL,GAAG,CAAC,OAAO,IAAI,EAAE;AACjB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5D,KAAK,SAAS;AACd,MAAM,IAAI,KAAK;AACf,QAAQ,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AACK,MAAM,MAAM,GAAG,OAAO,OAAO,EAAE;AACtC,EAAE,MAAM;AACR,EAAE,OAAO;AACT,CAAC,KAAK;AACN,EAAE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,IAAI,CAAC;AACtB,EAAE,IAAI;AACN,IAAI,MAAM,IAAI,OAAO,CAAC,MAAM;AAC5B,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK;AACjC,QAAQ,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAC3B,QAAQ,QAAQ,IAAI;AACpB,UAAU,KAAK,OAAO,EAAE;AACxB,YAAY,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AAC3D,YAAY,MAAM;AAClB,WAAW;AACX,UAAU,KAAK,cAAc,EAAE;AAC/B,YAAY,MAAM;AAClB,WAAW;AACX,UAAU,KAAK,YAAY,EAAE;AAC7B,YAAY,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AAClD,YAAY,GAAG,CAAC,IAAI;AACpB,cAAc,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG;AACvC,gBAAgB,CAAC,UAAU,KAAK,QAAQ,CAAC,QAAQ;AACjD,kBAAkB,OAAO,CAAC,GAAG,EAAE;AAC/B,kBAAkB,UAAU;AAC5B,iBAAiB;AACjB,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5B,aAAa,CAAC;AACd,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,YAAY,MAAM;AAClB,WAAW;AACX,UAAU,KAAK,KAAK,EAAE;AACtB,YAAY,QAAQ,GAAG,KAAK,CAAC;AAC7B,YAAY,MAAM,SAAS,GAAG,iBAAiB,IAAI,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC;AACrE,YAAY,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;AACvF,YAAY,GAAG,CAAC;AAChB,cAAc,KAAK;AACnB,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM;AAC1B,cAAc,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD,cAAc,GAAG,CAAC,IAAI;AACtB,gBAAgB,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC;AAC1D,eAAe,CAAC;AAChB,aAAa,CAAC,CAAC;AACf,YAAY,MAAM;AAClB,WAAW;AACX,UAAU,KAAK,OAAO,EAAE;AACxB,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACvC,YAAY,MAAM;AAClB,WAAW;AACX,SAAS;AACT,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,KAAK;AAChC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACrC,OAAO,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAClD,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,GAAG;AACH,CAAC,CAAC;AACF,eAAe,GAAG,CAAC;AACnB,EAAE,KAAK;AACP,EAAE,MAAM;AACR,EAAE,OAAO;AACT,CAAC,EAAE;AACH,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAC1C,EAAE,MAAM,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;AAChC,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjD,EAAE,MAAM,cAAc,GAAG,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAGS,SAAmB,CAAC;AACjF,EAAE,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9C,EAAE,MAAM,cAAc,GAAG,GAAG,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,aAAa,IAAI,IAAI,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/H,EAAE,IAAI,MAAM,CAAC,SAAS,EAAE;AACxB,IAAI,MAAM,MAAM,CAAC;AACjB,MAAM,KAAK;AACX,MAAM,KAAK,EAAE,MAAM,CAAC,KAAK;AACzB,MAAM,YAAY,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,KAAK,IAAI,GAAG,EAAE,GAAGP,QAAkB;AAC3E,MAAM,WAAW,EAAE,KAAK,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,cAAc,CAAC;AACnF,KAAK,CAAC,CAAC;AACP,GAAG;AACH,CAAC;AACM,eAAe,WAAW,CAAC;AAClC,EAAE,MAAM;AACR,EAAE,OAAO;AACT,EAAE,QAAQ;AACV,CAAC,EAAE;AACH,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjB,EAAE,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACrG,EAAE,MAAM;AACR,IAAI,MAAM,EAAE,OAAO;AACnB,IAAI,QAAQ,EAAE,SAAS;AACvB,IAAI,WAAW,EAAE,YAAY;AAC7B,IAAI,OAAO,EAAE,QAAQ;AACrB,IAAI,MAAM,EAAE,OAAO;AACnB,IAAI,MAAM,EAAE,SAAS,GAAG,EAAE;AAC1B;AACA,IAAI,SAAS;AACb,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,KAAK,EAAE,QAAQ;AACnB,IAAI,KAAK,EAAE,MAAM;AACjB,GAAG,GAAG,MAAM,CAAC;AACb,EAAE,MAAM,aAAa,GAAG,YAAY,CAAC;AACrC,IAAI,MAAM,EAAE,OAAO;AACnB,IAAI,QAAQ,EAAE,SAAS;AACvB,IAAI,WAAW,EAAE,YAAY;AAC7B,IAAI,OAAO,EAAE,MAAM,CAAC,MAAM;AAC1B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,QAAQ,EAAE;AACtE,MAAM,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,EAAE;AACtC,KAAK;AACL,IAAI,MAAM,EAAE,OAAO;AACnB,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;AAC3B,IAAI,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,MAAM,EAAE;AAC9B,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,WAAW,GAAG,kBAAkB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC7D,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC;AACnB,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,EAAE,OAAO,EAAE,YAAY,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,UAAU,GAAGK,WAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AACrG,EAAE,MAAM,8BAA8B,GAAGP,gBAAc,CAAC;AACxD,IAAI,IAAI,EAAE,IAAI;AACd,IAAI,SAAS,EAAE,IAAI;AACnB,IAAI,kBAAkB,EAAE,IAAI;AAC5B,IAAI,OAAO,EAAE,CAAC,GAAG,aAAa,EAAE,YAAY,CAAC;AAC7C,IAAI,QAAQ,EAAE,WAAW;AACzB,GAAG,EAAE,UAAU,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC;AAC3C,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE;AACrB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,KAAK;AACzD,MAAM,MAAM,GAAG,GAAG,OAAO,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,GAAG,EAAE,UAAU,GAAGO,WAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAChG,MAAM,MAAM,MAAM,GAAGP,gBAAc,CAAC;AACpC,QAAQ,KAAK,EAAE,WAAW,KAAK,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,GAAGU,KAAe,CAAC;AACxF,QAAQ,MAAM,EAAE,CAACT,eAAa,CAACD,gBAAc,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;AAC9E,OAAO,EAAE,8BAA8B,CAAC,CAAC;AACzC,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC;AACxB,OAAO;AACP,MAAM,MAAM,CAAC,GAAG,OAAO,CAAC,SAAS;AACjC,QAAQ,CAAC,CAAC,KAAK,iBAAiB,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;AACvD,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;AACnD,UAAU,MAAM,EAAE;AAClB,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;AAChC,YAAYC,eAAa,CAACD,gBAAc,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC;AACxE,WAAW;AACX,SAAS,CAAC,CAAC;AACX,OAAO;AACP,MAAM,OAAO,OAAO,CAAC;AACrB,KAAK,EAAE,EAAE,CAAC,CAAC;AACX,GAAG;AACH,EAAE,IAAI,MAAM,EAAE;AACd,IAAI,MAAM,MAAM,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;AAC/C,GAAG,MAAM;AACT,IAAI,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC;AAC/B,MAAM,OAAO,EAAE,OAAO;AACtB,MAAM,MAAM;AACZ,MAAM,OAAO;AACb,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3B,GAAG;AACH;;ACpUA,IAAIR,WAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAIG,YAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;AACzC,IAAIC,mBAAiB,GAAG,MAAM,CAAC,yBAAyB,CAAC;AACzD,IAAIC,qBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC;AACvD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AACnD,IAAIC,cAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACzD,IAAIN,iBAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAGD,WAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAIQ,gBAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC/B,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAChC,IAAI,IAAIF,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AAClC,MAAML,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,EAAE,IAAII,qBAAmB;AACzB,IAAI,KAAK,IAAI,IAAI,IAAIA,qBAAmB,CAAC,CAAC,CAAC,EAAE;AAC7C,MAAM,IAAIE,cAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AACpC,QAAQN,iBAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL,EAAE,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACF,IAAIQ,eAAa,GAAG,CAAC,CAAC,EAAE,CAAC,KAAKN,YAAU,CAAC,CAAC,EAAEC,mBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AAM3D,SAAS,gBAAgB,CAAC,IAAI,GAAG,iBAAiB,EAAE;AAC3D,EAAE,MAAM,UAAU,GAAG,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC5D,EAAE,MAAM,iBAAiB,GAAG,oCAAoC;AAChE,IAAI,UAAU;AACd,IAAI;AACJ,MAAM,yBAAyB,EAAE,IAAI;AACrC,MAAM,aAAa,EAAE,GAAG,CAAC,aAAa;AACtC,MAAM,QAAQ,EAAE,GAAG,CAAC,QAAQ;AAC5B,MAAM,UAAU,EAAE,GAAG,CAAC,UAAU;AAChC,KAAK;AACL,IAAI,GAAG;AACP,GAAG,CAAC;AACJ,EAAE,MAAM,EAAE,GAAG,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG,iBAAiB,CAAC;AAClD,EAAE,OAAOK,eAAa,CAACD,gBAAc,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;AAChD,IAAI,eAAe,EAAE,OAAO;AAC5B,GAAG,CAAC,CAAC;AACL;;ACxCA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC;AACtC,IAAI,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;AACzC,IAAI,iBAAiB,GAAG,MAAM,CAAC,yBAAyB,CAAC;AACzD,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAqB,CAAC;AACvD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AACnD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACzD,IAAI,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAChK,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC/B,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAChC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AAClC,MAAM,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,EAAE,IAAI,mBAAmB;AACzB,IAAI,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;AAC7C,MAAM,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;AACpC,QAAQ,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL,EAAE,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACF,IAAI,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,UAAU,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,IAAI,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK;AACrC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,KAAK,IAAI,IAAI,IAAI,MAAM;AACzB,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AACpE,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAClC,EAAE,IAAI,MAAM,IAAI,IAAI,IAAI,mBAAmB;AAC3C,IAAI,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,MAAM,CAAC,EAAE;AAClD,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AACtE,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,KAAK;AACL,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AASF,eAAe,GAAG,CAAC,IAAI,EAAE;AACzB,EAAE,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,MAAM,OAAO,GAAGW,IAAI,CAAC,YAAY,CAACR,WAAqB,CAAC,CAAC;AAC3D,EAAE,MAAM,YAAY,GAAGQ,IAAI,CAAC,YAAY;AACxC,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,oBAAoB,CAAC;AACjE,GAAG,CAAC;AACJ,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;AAC5B,IAAI,OAAO;AACX,IAAI,MAAM,EAAE,UAAU;AACtB,GAAG,GAAG,EAAE,EAAE,YAAY,GAAG,SAAS,CAAC,EAAE,EAAE;AACvC,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,EAAE,CAAC;AACZ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACnD,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,OAAO,IAAIT,QAAkB,CAAC,CAAC,CAAC,CAAC;AAC7D,EAAE,MAAM,QAAQ,GAAG,gBAAgB,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,GAAGA,QAAkB,CAAC,CAAC;AACpF,EAAE,IAAI,UAAU,EAAE;AAClB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC;AACrC,IAAI,UAAU;AACd,IAAI,OAAO;AACX,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,WAAW,CAAC;AACrB,IAAI,MAAM,EAAE,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,YAAY,CAAC,EAAE;AACpF,MAAM,OAAO;AACb,KAAK,CAAC;AACN,IAAI,OAAO;AACX,IAAI,QAAQ;AACZ,GAAG,CAAC,CAAC;AACL,CAAC;AACD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AACtC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;AAChB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;AACjB,CAAC,CAAC;;;;"}