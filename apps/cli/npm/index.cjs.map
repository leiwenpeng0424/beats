{"version":3,"file":"index.cjs","sources":["../src/constants.ts","../src/configuration.ts","../src/env.ts","../src/log.ts","../src/utils.ts","../src/dts.ts","../src/rollup.ts","../src/terminal.ts","../src/tsconfig.ts","../src/cli.ts"],"sourcesContent":["export const tsconfig = \"./tsconfig.json\";\nexport const packageJson = \"./package.json\";\nexport const dtsEntry = \"index.d.ts\";\n\nexport const output = \"./index.js\";\nexport const input = \"./src/index\";\n\nexport const outputDir = \"npm\";\nexport const dtsDir = \".dts\";\n\nexport const esmExt = [\".mjs\", \".mts\"];\nexport const cjsExt = [\".cjs\", \".cts\"];\n\nexport const esmMiddleNames = [\".esm.\", \".es.\"];\nexport const cjsMiddleNames = [\".cjs.\"];\n\n","import * as CONSTANTS from \"@/constants\";\r\nimport { module_ } from \"@nfts/nodeutils\";\r\nimport type { IPackageJson } from \"@nfts/pkg-json\";\r\nimport type { TRollupTransformOptions } from \"@nfts/plugin-esbuild\";\r\nimport type { RollupCommonJSOptions } from \"@rollup/plugin-commonjs\";\r\nimport type { RollupEslintOptions } from \"@rollup/plugin-eslint\";\r\nimport type { RollupNodeResolveOptions } from \"@rollup/plugin-node-resolve\";\r\nimport nodeFs from \"node:fs/promises\";\r\nimport nodePath from \"node:path\";\r\nimport type { ModuleFormat, Plugin, RollupOptions } from \"rollup\";\r\n\r\n/**\r\n * Return output format.\r\n * @param output\r\n */\r\nfunction getFormatFromFileName(output: string): ModuleFormat {\r\n    const ext = nodePath.extname(output);\r\n\r\n    if (CONSTANTS.esmExt.includes(ext) || output.endsWith(\".d.ts\")) {\r\n        return \"es\";\r\n    }\r\n\r\n    if (CONSTANTS.cjsExt.includes(ext)) {\r\n        return \"cjs\";\r\n    }\r\n\r\n    if (CONSTANTS.esmMiddleNames.some((name) => output.includes(name))) {\r\n        return \"es\";\r\n    }\r\n\r\n    if (CONSTANTS.cjsMiddleNames.some((name) => output.includes(name))) {\r\n        return \"cjs\";\r\n    }\r\n\r\n    return \"cjs\";\r\n}\r\n\r\n/**\r\n * Get outputs from package.json\r\n * @param pkgJson\r\n * @param externalOutputOptions\r\n */\r\nfunction getOutputFromPackageJson(\r\n    pkgJson: IPackageJson,\r\n    externalOutputOptions: (opt: TBundleConfig) => TBundleConfig = (o) => o,\r\n): TBundleConfig[] {\r\n    const { main, module: m } = pkgJson;\r\n    return (\r\n        [main, m]\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            .filter<string>(Boolean)\r\n            .map((output) => {\r\n                const format = getFormatFromFileName(output);\r\n\r\n                // dot mark fallback to ./index.js\r\n                if (output === \".\") {\r\n                    output = CONSTANTS.output;\r\n                }\r\n\r\n                return externalOutputOptions({\r\n                    format,\r\n                    file: output,\r\n                });\r\n            })\r\n    );\r\n}\r\n\r\n/**\r\n * Default config.\r\n */\r\nconst Configs = [\"beats.config.js\", \"beats.config.ts\", \"beats.config.json\"];\r\n\r\nexport type TBundleConfig = {\r\n    input?: string;\r\n    dir?: string;\r\n    file?: string;\r\n    format?: ModuleFormat;\r\n    globals?: string[];\r\n    plugins?: Plugin[];\r\n    paths?: {\r\n        [K: string]: string;\r\n    };\r\n    sourcemap?: boolean | \"inline\" | \"hidden\";\r\n};\r\n\r\nexport interface CLIOptions {\r\n    // eslint-disable-next-line\r\n    [K: string]: any;\r\n    /**\r\n     * Entry file for all bundle output. If you are not specified in bundle item.\r\n     * this would be the default input.\r\n     */\r\n    input?: string;\r\n\r\n    /**\r\n     * Should generate .d.ts file for bundle.\r\n     */\r\n    dtsRollup?: boolean;\r\n\r\n    /**\r\n     * Generate .map file for bundle output.\r\n     */\r\n    sourcemap?: boolean | \"inline\" | \"hidden\";\r\n\r\n    /**\r\n     * Specified beats config file path.\r\n     */\r\n    config?: string;\r\n\r\n    /**\r\n     * tsconfig file path.\r\n     */\r\n    project?: string;\r\n\r\n    /**\r\n     * Print more info in terminal during bundle.\r\n     */\r\n    verbose?: boolean;\r\n\r\n    /**\r\n     * Watch mode.\r\n     */\r\n    watch?: boolean;\r\n\r\n    /**\r\n     * Cleanup before output write.\r\n     */\r\n    clean?: boolean;\r\n\r\n    /**\r\n     * Confound bundle code.\r\n     */\r\n    minify?: boolean;\r\n\r\n    /**\r\n     * Show internal debug info.\r\n     */\r\n    debug?: boolean;\r\n}\r\n\r\nexport interface Config extends CLIOptions {\r\n    /**\r\n     * Dependencies should be exclude during bundle.\r\n     */\r\n    externals?: string[];\r\n\r\n    /**\r\n     * esbuild options.\r\n     */\r\n    esbuild?: TRollupTransformOptions;\r\n\r\n    /**\r\n     * eslint options.\r\n     */\r\n    eslint?: RollupEslintOptions & {\r\n        /**\r\n         * Disable use of configuration from .eslintrc.*\r\n         */\r\n        noEslintrc?: boolean;\r\n    };\r\n\r\n    commonjs?: RollupCommonJSOptions;\r\n    nodeResolve?: RollupNodeResolveOptions;\r\n\r\n    /**\r\n     * TODO:\r\n     *  rollup-plugin-styles is no longer actively update,\r\n     *  Try to replace rollup-plugin-styles with new plugin.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    styles?: any;\r\n\r\n    /**\r\n     * Extra rollup options.\r\n     */\r\n    rollup?: Exclude<TRollupOptions, \"output\" | \"input\">;\r\n\r\n    /**\r\n     * Output options.\r\n     */\r\n    bundle?: TBundleConfig[];\r\n\r\n    /**\r\n     * Overwrite bundle config\r\n     */\r\n    bundleOverwrite?: (b: TBundleConfig) => TBundleConfig;\r\n}\r\n\r\nexport type TRollupOptions = Omit<RollupOptions, \"input\"> & {\r\n    input: string;\r\n};\r\n\r\n/**\r\n * Configuration define helper.\r\n * @param options\r\n */\r\nexport function defineConfig(options: Config) {\r\n    return options;\r\n}\r\n\r\n/**\r\n * Read config from project.\r\n * @param configPath\r\n * @param pkgJson\r\n */\r\nexport async function tryReadConfig({\r\n    configPath,\r\n    pkgJson,\r\n}: {\r\n    configPath?: string;\r\n    pkgJson: IPackageJson;\r\n}): Promise<Config> {\r\n    const _cwd = process.cwd();\r\n\r\n    let config: Config;\r\n\r\n    if (!configPath) {\r\n        for await (const configFile of Configs) {\r\n            try {\r\n                const configFilePath = nodePath.join(_cwd, configFile);\r\n                await nodeFs.access(configFilePath);\r\n                configPath = configFilePath;\r\n                break;\r\n            } catch (e: unknown) {\r\n                // TODO: Skip error\r\n            }\r\n        }\r\n    }\r\n\r\n    if (configPath) {\r\n        config = module_.import_<Config>(configPath);\r\n\r\n        if (!config.bundle) {\r\n            Object.assign(config, {\r\n                bundle: getOutputFromPackageJson(\r\n                    pkgJson,\r\n                    config.bundleOverwrite,\r\n                ),\r\n            });\r\n        }\r\n\r\n        if (pkgJson.types) {\r\n            Object.assign(config, { dtsRollup: true });\r\n        }\r\n\r\n        return config;\r\n    } else {\r\n        return {\r\n            dtsRollup: !!pkgJson.types,\r\n            bundle: getOutputFromPackageJson(pkgJson),\r\n        };\r\n    }\r\n}\r\n","import dotenv, { type DotenvPopulateInput } from \"dotenv\";\nimport dotenvExpand from \"dotenv-expand\";\n\nexport default function loadEnv(input: DotenvPopulateInput = {}) {\n    const config = dotenv.config({\n        processEnv: input,\n    });\n    dotenvExpand.expand(config);\n}\n","import { colors } from \"@nfts/nodeutils\";\n\n/**\n * Verbose\n * @param args\n */\n// eslint-disable-next-line\nexport const verboseLog = (...args: any[]) => {\n    if (process.env.VERBOSE) {\n        console.log(...args);\n    }\n};\n\n/**\n * Debug\n * @param args\n */\n// eslint-disable-next-line\nexport const debugLog = (...args: any[]) => {\n    if (process.env.DEBUG) {\n        console.log();\n        console.debug(\n            colors.bgBlack(colors.cyan(colors.bold(\"debug:\"))),\n            ...args,\n        );\n    }\n};\n","import { verboseLog } from \"@/log\";\nimport { colors, json as Json } from \"@nfts/nodeutils\";\nimport type { IPackageJson } from \"@nfts/pkg-json\";\nimport nodePath from \"node:path\";\nimport type { RollupOptions } from \"rollup\";\n\n// Clear screen.\nexport const clearScreen = () => process.stdout.write(\"\\x1Bc\");\n\n// Current working directory.\nexport const cwd = () => process.cwd();\n\nexport const isSameRollupInput = (\n    input1: RollupOptions[\"input\"],\n    input2: RollupOptions[\"input\"],\n) => {\n    const type1 = typeof input1;\n    const type2 = typeof input2;\n\n    if (type1 !== type2) {\n        return false;\n    }\n\n    if (Array.isArray(input1) && Array.isArray(input2)) {\n        return input1.toString() === input2.toString();\n    }\n\n    return input1 === input2;\n};\n\n/**\n * Convert \"x1,x2,x3\" to [\"x1\", \"x2\", \"x3\"]\n * @param input\n */\nexport const normalizeCliInput = (input: string) => {\n    return input.trimStart().trimEnd().split(\",\").filter(Boolean);\n};\n\nexport const depsInfo = () => {\n    const coreDeps = [\"typescript\", \"esbuild\", \"rollup\"];\n\n    const depInfo = coreDeps\n        .map((dep) => {\n            const main = require.resolve(dep);\n            const depDir = nodePath.join(main, \"../../\");\n            const pkgJson = Json.readJSONSync<IPackageJson>(\n                nodePath.join(depDir, \"package.json\"),\n            );\n\n            const { name, version } = pkgJson;\n            return {\n                name,\n                version,\n                path: depDir,\n            };\n        })\n        .reduce((infos, info) => {\n            return (infos += `${colors.green(\"*\")} ${info.name}@${colors.green(\n                info.version,\n            )} \\n`);\n        }, \"\");\n\n    verboseLog(depInfo);\n};\n\n/**\n * Write bundle result to terminal.\n * @param input\n * @param output\n */\nexport function printOutput(input: string, output: string) {\n    console.log(\n        colors.bgBlack(\n            colors.bold(colors.cyan(nodePath.relative(cwd(), input))),\n        ),\n        colors.cyan(\"➡︎\"),\n        colors.cyan(output),\n    );\n}\n\nexport function measureSync(mark: string, task: () => void) {\n    performance.mark(`${mark} start`);\n    task();\n    performance.mark(`${mark} end`);\n\n    const measure = performance.measure(\n        `${mark} start to end`,\n        `${mark} start`,\n        `${mark} end`,\n    );\n\n    verboseLog(\n        colors.bgBlack(\n            colors.white(colors.bold(`${mark} duration: ${measure.duration}`)),\n        ),\n    );\n}\n\nexport async function measure(mark: string, task: () => Promise<void>) {\n    performance.mark(`${mark} start`);\n    await task();\n    performance.mark(`${mark} end`);\n\n    const measure = performance.measure(\n        `${mark} start to end`,\n        `${mark} start`,\n        `${mark} end`,\n    );\n\n    verboseLog(\n        colors.bgBlack(\n            colors.white(colors.bold(`${mark} duration: ${measure.duration}`)),\n        ),\n    );\n}\n\nexport function resolveDtsEntryFromEntry(\n    declarationDir: string,\n    entry: string,\n) {\n    let entryUnshiftRoot = nodePath\n        .join(cwd(), entry)\n        .replace(cwd() + nodePath.sep, \"\")\n        .split(nodePath.sep)\n        .slice(1)\n        .join(nodePath.sep)\n        .replace(\".ts\", \".d.ts\");\n\n    if (!entryUnshiftRoot.endsWith(\".d.ts\")) {\n        entryUnshiftRoot += \".d.ts\";\n    }\n\n    return nodePath.join(cwd(), declarationDir, entryUnshiftRoot);\n}\n\n/**\n * Serialize async tasks.\n * @param tasks\n */\n// eslint-disable-next-line\nexport async function serialize(tasks: (() => Promise<any>)[]) {\n    return tasks.reduce((promise, next) => {\n        return promise.then(() => {\n            return next();\n        });\n    }, Promise.resolve());\n}\n\n/**\n * Split text by length.\n * @param str\n * @param len\n */\nexport function strSplitByLength(str: string, len: number): string[] {\n    const result = str.match(new RegExp(`(.{1,${len}})`, \"g\"));\n    return result ?? [];\n}\n\n/** @link https://github.com/chalk/strip-ansi/blob/main/index.js */\nexport function stripAnsi(\n    text: string,\n    { onlyFirst }: { onlyFirst: boolean } = { onlyFirst: true },\n) {\n    const pattern = [\n        \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\n        \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\",\n    ].join(\"|\");\n    const regexp = new RegExp(pattern, onlyFirst ? undefined : \"g\");\n    return text.replace(regexp, \"\");\n}\n\n","import * as CONSTANTS from \"@/constants\";\nimport Terminal from \"@/terminal\";\nimport { resolveDtsEntryFromEntry } from \"@/utils\";\nimport {\n    Extractor,\n    ExtractorConfig,\n    ExtractorLogLevel,\n    ExtractorMessage,\n} from \"@microsoft/api-extractor\";\nimport { file as File, colors } from \"@nfts/nodeutils\";\nimport nodeFs from \"node:fs/promises\";\nimport nodePath from \"node:path\";\nimport ts, {\n    createCompilerHost,\n    createProgram,\n    sys,\n    type CompilerOptions,\n} from \"typescript\";\n\nexport function createCompilerProgram(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n): ts.Program | undefined {\n    // TODO：可配置来创建 incremental program\n    const config = ts.getParsedCommandLineOfConfigFile(\n        tsconfig,\n        tsConfigCompilerOptions,\n        {\n            useCaseSensitiveFileNames: true,\n            getCurrentDirectory: sys.getCurrentDirectory,\n            readDirectory: sys.readDirectory,\n            fileExists: sys.fileExists,\n            readFile: sys.readFile,\n            onUnRecoverableConfigFileDiagnostic: function (\n                diagnostic: ts.Diagnostic,\n            ): void {\n                console.log(\n                    `onUnRecoverableConfigFileDiagnostic`,\n                    diagnostic.messageText,\n                );\n            },\n        },\n    );\n\n    const host = createCompilerHost(tsConfigCompilerOptions);\n\n    if (config) {\n        return createProgram({\n            host,\n            options: {\n                ...config.options,\n                noEmit: false,\n            },\n            rootNames: config.fileNames,\n            projectReferences: config.projectReferences,\n            configFileParsingDiagnostics:\n                ts.getConfigFileParsingDiagnostics(config),\n        });\n    }\n}\n\nexport function emitOnlyDeclarations(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n) {\n    const program = createCompilerProgram(tsConfigCompilerOptions, tsconfig);\n    if (program) {\n        program.emit(undefined);\n    }\n}\n\nexport interface IDtsGenOptions {\n    term: Terminal;\n    input: string;\n    tsConfigFile?: string;\n    dtsFileName?: string;\n    watch?: boolean;\n}\n\nexport async function dtsGen({\n    term,\n    input,\n    dtsFileName,\n    tsConfigFile = CONSTANTS.tsconfig,\n}: IDtsGenOptions) {\n    // PKG-JSON\n    const packageJsonFullPath = nodePath.resolve(\n        process.cwd(),\n        CONSTANTS.packageJson,\n    );\n\n    emitOnlyDeclarations(\n        {\n            declaration: true,\n            emitDeclarationOnly: true,\n            declarationDir: CONSTANTS.dtsDir,\n        },\n        tsConfigFile,\n    );\n\n    const ext = nodePath.extname(input);\n\n    const mainEntry = CONSTANTS.dtsDir\n        ? resolveDtsEntryFromEntry(CONSTANTS.dtsDir, input)\n        : ext\n        ? input.replace(nodePath.extname(input), \".d.ts\")\n        : `${input}.d.ts`;\n\n    const content = await nodeFs.readFile(mainEntry);\n\n    // Fix #1\n    if (content.toString() === \"\") {\n        return;\n    }\n\n    const trimmedFile = dtsFileName || CONSTANTS.dtsEntry;\n\n    const config = ExtractorConfig.prepare({\n        configObjectFullPath: undefined,\n        packageJsonFullPath: packageJsonFullPath,\n        ignoreMissingEntryPoint: true,\n        configObject: {\n            projectFolder: process.cwd(),\n            compiler: {\n                tsconfigFilePath: tsConfigFile,\n            },\n            mainEntryPointFilePath: mainEntry,\n            dtsRollup: {\n                enabled: true,\n                publicTrimmedFilePath: trimmedFile,\n            },\n            docModel: {\n                enabled: false,\n            },\n            tsdocMetadata: {\n                enabled: false,\n            },\n        },\n    });\n\n    const extractorResult = Extractor.invoke(config, {\n        localBuild: true,\n        showDiagnostics: false,\n        showVerboseMessages: false,\n        typescriptCompilerFolder: nodePath.join(\n            require.resolve(\"typescript\"),\n            \"../..\",\n        ),\n        messageCallback(message: ExtractorMessage) {\n            message.logLevel = \"none\" as ExtractorLogLevel.None;\n        },\n    });\n\n    if (extractorResult.succeeded) {\n        // TODO: Add verbose message\n    } else {\n        // TODO: Throw whe meet error\n    }\n\n    File.rmdirSync(CONSTANTS.dtsDir);\n\n    const message = ` ✨ ${colors.bgBlack(\n        colors.bold(nodePath.relative(process.cwd(), input)),\n    )} ${colors.bold(\"->\")} ${nodePath.relative(process.cwd(), trimmedFile)}`;\n\n    term.writeLine(message);\n    term.nextLine();\n    term.nextLine();\n}\n\n","import type { Config, TRollupOptions } from \"@/configuration\";\r\nimport { cwd, isSameRollupInput, normalizeCliInput, serialize } from \"@/utils\";\r\nimport { colors, ms } from \"@nfts/nodeutils\";\r\nimport type { IPackageJson } from \"@nfts/pkg-json\";\r\nimport cleanup, { RollupCleanupOptions } from \"@nfts/plugin-cleanup\";\r\nimport esbuild from \"@nfts/plugin-esbuild\";\r\nimport bundleProgress from \"@nfts/plugin-progress\";\r\nimport type { ITSConfigJson } from \"@nfts/tsc-json\";\r\nimport commonjs from \"@rollup/plugin-commonjs\";\r\nimport eslint from \"@rollup/plugin-eslint\";\r\nimport nodeResolve from \"@rollup/plugin-node-resolve\";\r\nimport Module from \"node:module\";\r\nimport nodePath from \"node:path\";\r\nimport {\r\n    rollup,\r\n    watch,\r\n    type RollupOptions,\r\n    type RollupOutput,\r\n    type RollupWatchOptions,\r\n} from \"rollup\";\r\n// import postcssPlugin from \"@/plugins/styles\";\r\nimport * as CONSTANTS from \"@/constants\";\r\nimport { dtsGen } from \"@/dts\";\r\nimport { verboseLog } from \"@/log\";\r\nimport alias, { RollupAliasOptions } from \"@nfts/plugin-alias\";\r\n// import styles from \"rollup-plugin-styles\";\r\nimport styles from \"@nfts/plugin-styles\";\r\nimport Terminal from \"./terminal\";\r\n\r\nexport const Extensions = [\r\n    \".js\",\r\n    \".jsx\",\r\n    \".ts\",\r\n    \".tsx\",\r\n    \".json\",\r\n    \".mjs\",\r\n    \".cjs\",\r\n    \".mts\",\r\n    \".cts\",\r\n    \".node\",\r\n];\r\n\r\nexport const StyleSheetExtensions = [\".css\", \".less\", \".scss\", \".sass\"];\r\n\r\n/**\r\n *\r\n * @desc Externals function for rollup.externals,\r\n * by default, all devDependencies and dependencies in package.json\r\n * will be ignored.\r\n *\r\n */\r\nexport const externalsGenerator = (\r\n    externals: string[] = [],\r\n    pkgJson: IPackageJson,\r\n) => {\r\n    /**\r\n     * Default exclude deps and peerDeps\r\n     */\r\n    const { dependencies = {}, peerDependencies = {} } = pkgJson;\r\n    const nativeModules = Module.builtinModules\r\n        .concat(Module.builtinModules.map((m) => `node:${m}`))\r\n        .concat(\r\n            Object.keys(dependencies).concat(Object.keys(peerDependencies)),\r\n        );\r\n\r\n    return (id: string) => {\r\n        return externals?.includes(id) || nativeModules.includes(id);\r\n    };\r\n};\r\n\r\n/**\r\n * Default plugins.\r\n **/\r\nexport const applyPlugins = (\r\n    options?: Pick<\r\n        Config,\r\n        \"eslint\" | \"nodeResolve\" | \"commonjs\" | \"esbuild\" | \"styles\"\r\n    > & {\r\n        clean?: RollupCleanupOptions;\r\n        alias?: RollupAliasOptions;\r\n    },\r\n) => {\r\n    return [\r\n        cleanup(options?.clean),\r\n        styles(options?.styles),\r\n        alias(options?.alias ?? { alias: {} }),\r\n        // @TODO\r\n        // postcssPlugin({ cssModules: true }),\r\n        esbuild(\r\n            Object.assign({\r\n                options: options?.esbuild,\r\n                tsConfigFile: nodePath.join(cwd(), \"tsconfig.json\"),\r\n            }),\r\n        ),\r\n        nodeResolve(\r\n            Object.assign(\r\n                {\r\n                    rootDir: cwd(),\r\n                    preferBuiltins: false,\r\n                    extensions: Extensions,\r\n                },\r\n                options?.nodeResolve ?? {},\r\n            ),\r\n        ),\r\n        commonjs(\r\n            Object.assign({ extensions: Extensions }, options?.commonjs ?? {}),\r\n        ),\r\n        eslint(Object.assign({}, options?.eslint ?? {})),\r\n        bundleProgress(),\r\n    ].filter(Boolean);\r\n};\r\n\r\nexport type TBundleOutput =\r\n    | {\r\n          duration: number;\r\n          input: string;\r\n      }\r\n    | RollupOutput;\r\n\r\n/**\r\n *\r\n * Get all bundle tasks.\r\n *\r\n */\r\nexport const bundle = async ({\r\n    term,\r\n    options,\r\n    config,\r\n    pkgJson,\r\n}: {\r\n    term: Terminal;\r\n    options: TRollupOptions | TRollupOptions[];\r\n    config: Config;\r\n    pkgJson: IPackageJson;\r\n}) => {\r\n    const bundles: (() => Promise<TBundleOutput>)[] = [];\r\n\r\n    if (!Array.isArray(options)) {\r\n        options = [options];\r\n    }\r\n\r\n    for await (const option of options) {\r\n        const bundle_ = await rollup(option);\r\n        let { output } = option;\r\n        const { input } = option;\r\n        if (output) {\r\n            if (output && !Array.isArray(output)) {\r\n                output = [output];\r\n            }\r\n\r\n            for (const output_ of output) {\r\n                // Add bundle task\r\n                bundles.push(async () => {\r\n                    const start = Date.now();\r\n                    await bundle_.generate(output_);\r\n                    const output = await bundle_.write(output_);\r\n\r\n                    const duration = Date.now() - start;\r\n\r\n                    const message = ` ✨ ${colors.bgBlack(\r\n                        colors.bold(nodePath.relative(cwd(), input)),\r\n                    )} ${colors.bold(\"->\")} ${output_.file as string} (${ms(\r\n                        duration,\r\n                    )})`;\r\n\r\n                    term.writeLine(message);\r\n                    term.nextLine();\r\n\r\n                    return {\r\n                        ...output,\r\n                        duration,\r\n                    };\r\n                });\r\n            }\r\n\r\n            // One bundle one dts.\r\n            bundles.push(async () => {\r\n                const start = Date.now();\r\n                await dts({ term, config, pkgJson, rollup: option });\r\n                return {\r\n                    // TODO: Add input value.\r\n                    input: \"\",\r\n                    duration: Date.now() - start,\r\n                };\r\n            });\r\n        } else {\r\n            verboseLog(`Output not found for input '${option.input}', skip...`);\r\n        }\r\n    }\r\n\r\n    return bundles;\r\n};\r\n\r\n/**\r\n *\r\n * Dev process\r\n *\r\n */\r\nexport const watch_ = async (\r\n    options: RollupWatchOptions | RollupWatchOptions[],\r\n    term: Terminal,\r\n    {\r\n        bundleEnd,\r\n        bundleStart,\r\n        start,\r\n        end,\r\n        error,\r\n    }: {\r\n        bundleEnd?: () => void;\r\n        bundleStart?: () => void;\r\n        start?: () => void;\r\n        end?: () => Promise<void>;\r\n        error?: () => void;\r\n    } = {},\r\n) => {\r\n    const watcher = watch(options);\r\n    let firstRun = true;\r\n    let startTime: number;\r\n    try {\r\n        await new Promise<void>(() => {\r\n            watcher.on(`event`, (e) => {\r\n                const code = e.code;\r\n                switch (code) {\r\n                    case \"START\": {\r\n                        term.clearScreen();\r\n                        start?.();\r\n                        if (firstRun) {\r\n                            term.writeLine(`Start rollup watching bundle.`);\r\n                        }\r\n                        startTime = new Date().getTime();\r\n                        break;\r\n                    }\r\n\r\n                    case \"BUNDLE_START\": {\r\n                        bundleStart?.();\r\n                        break;\r\n                    }\r\n\r\n                    case \"BUNDLE_END\": {\r\n                        bundleEnd?.();\r\n                        break;\r\n                    }\r\n\r\n                    case \"END\": {\r\n                        end?.().finally(() => {\r\n                            if (firstRun) {\r\n                                term.writeLine(\r\n                                    `Bundle end in ${ms(\r\n                                        new Date().getTime() - startTime,\r\n                                    )}`,\r\n                                );\r\n                            } else {\r\n                                term.writeLine(\r\n                                    `Re-bundle end ${ms(\r\n                                        new Date().getTime() - startTime,\r\n                                    )}`,\r\n                                );\r\n                            }\r\n                            firstRun = false;\r\n                        });\r\n\r\n                        break;\r\n                    }\r\n                    case \"ERROR\": {\r\n                        error?.();\r\n                        term.clearScreen().writeLine(\r\n                            `Bundle Error: ${e.error.message}`,\r\n                        );\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    } catch (e) {\r\n        //\r\n    }\r\n};\r\n\r\nasync function dts({\r\n    term,\r\n    config,\r\n    rollup,\r\n    pkgJson,\r\n}: {\r\n    term: Terminal;\r\n    config: Config;\r\n    rollup: TRollupOptions;\r\n    pkgJson: IPackageJson;\r\n}): Promise<void> {\r\n    const { input } = rollup;\r\n    const { module, main, types } = pkgJson;\r\n    const output = module || main;\r\n\r\n    const inputBasename = nodePath.basename(input);\r\n    const outputBasepath = output\r\n        ? nodePath.dirname(output)\r\n        : CONSTANTS.outputDir;\r\n\r\n    const ext = nodePath.extname(inputBasename);\r\n\r\n    const outputBasename = ext\r\n        ? inputBasename.replace(ext, \".d.ts\")\r\n        : `${inputBasename ?? \"index\"}.d.ts`;\r\n\r\n    if (config.dtsRollup) {\r\n        // await measure(\"dts\", async () => {\r\n        await dtsGen({\r\n            term,\r\n            input,\r\n            tsConfigFile: config.project ?? CONSTANTS.tsconfig,\r\n            dtsFileName:\r\n                types ||\r\n                nodePath.resolve(cwd(), outputBasepath, outputBasename),\r\n        });\r\n        // });\r\n    }\r\n}\r\n\r\nexport async function startBundle({\r\n    term,\r\n    config,\r\n    pkgJson,\r\n    tsConfig,\r\n}: {\r\n    term: Terminal;\r\n    config: Config;\r\n    pkgJson: IPackageJson;\r\n    tsConfig: ITSConfigJson;\r\n}) {\r\n    const paths = tsConfig.compilerOptions?.paths ?? {};\r\n    const target = tsConfig.compilerOptions?.target ?? \"es6\";\r\n    const {\r\n        eslint,\r\n        commonjs,\r\n        nodeResolve,\r\n        esbuild,\r\n        styles,\r\n        rollup: rollupOpt = {} as TRollupOptions,\r\n        // Options\r\n        externals,\r\n        minify,\r\n        sourcemap,\r\n        input: cliInput,\r\n        watch,\r\n    } = config;\r\n\r\n    const rollupPlugins = applyPlugins({\r\n        eslint,\r\n        commonjs,\r\n        nodeResolve,\r\n        esbuild: Object.assign({ minify, target }, esbuild ?? {}),\r\n        styles,\r\n        alias: { alias: paths },\r\n        clean: { active: !watch },\r\n    });\r\n\r\n    const externalsFn = externalsGenerator(externals, pkgJson);\r\n\r\n    let bundles: TRollupOptions[] = [];\r\n\r\n    const { plugins: extraPlugins = [], ...rollupOpts } = rollupOpt;\r\n\r\n    const rollupOptionWithoutInputOutput: Omit<\r\n        RollupOptions,\r\n        \"input\" | \"output\"\r\n    > = {\r\n        perf: true,\r\n        treeshake: true,\r\n        strictDeprecations: true,\r\n        plugins: [...rollupPlugins, extraPlugins],\r\n        external: externalsFn,\r\n        ...(rollupOpts ?? {}),\r\n    };\r\n\r\n    if (config.bundle) {\r\n        bundles = config.bundle.reduce((options, bundle) => {\r\n            const { input: bundleInput, ...otherProps } = bundle;\r\n\r\n            const option = {\r\n                input:\r\n                    bundleInput ||\r\n                    (cliInput\r\n                        ? normalizeCliInput(cliInput as string)\r\n                        : CONSTANTS.input),\r\n                output: [{ ...otherProps, sourcemap }],\r\n                ...rollupOptionWithoutInputOutput,\r\n            } as TRollupOptions;\r\n\r\n            if (options.length === 0) {\r\n                return [option];\r\n            }\r\n\r\n            const i = options.findIndex((o) =>\r\n                isSameRollupInput(o.input, option.input),\r\n            );\r\n\r\n            if (i === -1) {\r\n                options.push(option);\r\n            } else {\r\n                options[i] = Object.assign({}, options[i], {\r\n                    output: [\r\n                        ...(options[i].output as TRollupOptions[]),\r\n                        { ...otherProps, sourcemap },\r\n                    ],\r\n                });\r\n            }\r\n\r\n            return options;\r\n        }, [] as TRollupOptions[]);\r\n    }\r\n\r\n    if (watch) {\r\n        await watch_(bundles, term, {\r\n            async end() {\r\n                await Promise.all(\r\n                    bundles.map(async (opts) => {\r\n                        await dts({\r\n                            term,\r\n                            config,\r\n                            pkgJson,\r\n                            rollup: opts,\r\n                        });\r\n                    }),\r\n                );\r\n            },\r\n        });\r\n    } else {\r\n        // await measure(\"rollup\", async () => {\r\n        const tasks = await bundle({\r\n            options: bundles,\r\n            config,\r\n            pkgJson,\r\n            term,\r\n        });\r\n        await serialize(tasks);\r\n        // });\r\n    }\r\n}\r\n","import { strSplitByLength, stripAnsi } from \"@/utils\";\nimport readline from \"node:readline\";\n\nexport default class Terminal {\n    private readonly stdin = process.stdin;\n    private readonly stdout = process.stdout;\n\n    private x: number;\n    private y: number;\n\n    private maxCols: number;\n\n    private readonly rl: readline.Interface;\n\n    constructor() {\n        this.rl = readline.createInterface({\n            input: this.stdin,\n            output: this.stdout,\n            historySize: 0,\n            removeHistoryDuplicates: true,\n            tabSize: 4,\n            prompt: \"\",\n            terminal: process.stdout.isTTY,\n        });\n\n        const pos = this.rl.getCursorPos();\n        this.x = pos.cols;\n        this.y = pos.rows;\n        this.maxCols =\n            process.stdout.columns > 60 ? 60 : process.stdout.columns;\n    }\n\n    private _write(content: string) {\n        readline.clearScreenDown(this.stdin);\n        const segments = strSplitByLength(content, this.maxCols);\n        segments.forEach((text) => {\n            this.rl.write(text);\n            this.y += 1;\n        });\n\n        return this;\n    }\n\n    public nextLine() {\n        this.y += 1;\n        this.rl.write(\"\\r\");\n        return this;\n    }\n\n    public clearLine(cb?: () => void) {\n        process.stdout.cursorTo(0);\n        process.stdout.clearLine(1, () => {\n            cb?.();\n        });\n        return this;\n    }\n\n    public writeSameLine(content: string) {\n        this.clearLine(() => {\n            this._write(content);\n        });\n        return this;\n    }\n\n    public writeLine(\n        content: string,\n        options: { endWithNewLine: boolean } = {\n            endWithNewLine: false,\n        },\n    ) {\n        this._write(content);\n        if (options.endWithNewLine) {\n            this.nextLine();\n        }\n        return this;\n    }\n\n    public clearScreen() {\n        this.x = 0;\n        this.y = 0;\n        readline.cursorTo(this.stdin, this.x, this.y);\n        readline.clearScreenDown(this.stdin);\n        return this;\n    }\n\n    public box(content: string | string[]) {\n        this.nextLine();\n        this.writeLine(\n            `╭${Array(this.maxCols - 2)\n                .fill(\"─\")\n                .join(\"\")}╮`,\n        );\n        this.nextLine();\n        const padding = 4;\n        const writeCenter = (text: string) => {\n            const originLen = text.length;\n            const stripLen = stripAnsi(text).length;\n\n            const len = stripAnsi(text).length - (originLen - stripLen) - 0;\n            const restLen = this.maxCols - padding * 2;\n\n            if (restLen < len) {\n                strSplitByLength(text, restLen).forEach((t) => {\n                    writeCenter(t);\n                });\n            } else {\n                const left = Math.ceil((restLen - len) / 2);\n                const leftPadding =\n                    \"│\" +\n                    Array(left + padding - 1)\n                        .fill(\" \")\n                        .join(\"\");\n                const rightPadding =\n                    Array(restLen - left - len + padding - 1)\n                        .fill(\" \")\n                        .join(\"\") + \"│\";\n\n                this.writeLine(`${leftPadding}${text}${rightPadding}`);\n                this.nextLine();\n            }\n        };\n        const contents = [\n            \" \",\n            typeof content === \"string\" ? content : content,\n            \" \",\n        ].flat();\n        contents.forEach((t) => {\n            writeCenter(t);\n        });\n        this.writeLine(\n            `╰${Array(this.maxCols - 2)\n                .fill(\"─\")\n                .join(\"\")}╯`,\n        );\n        this.nextLine();\n        return this;\n    }\n}\n","import type { ITSConfigJson } from \"@nfts/tsc-json\";\nimport {\n    parseJsonSourceFileConfigFileContent,\n    readJsonConfigFile,\n    sys,\n} from \"typescript\";\n\nexport function loadTsConfigJson(path = \"./tsconfig.json\"): ITSConfigJson {\n    const sourceFile = readJsonConfigFile(path, sys.readFile);\n    const parsedCommandLine = parseJsonSourceFileConfigFileContent(\n        sourceFile,\n        {\n            useCaseSensitiveFileNames: true,\n            readDirectory: sys.readDirectory,\n            readFile: sys.readFile,\n            fileExists: sys.fileExists,\n        },\n        \".\",\n    );\n\n    const { raw = {}, options } = parsedCommandLine;\n\n    return {\n        ...raw,\n        compilerOptions: options,\n    };\n}\n\n","import { tryReadConfig, type CLIOptions } from \"@/configuration\";\r\nimport * as CONSTANTS from \"@/constants\";\r\nimport loadEnv from \"@/env\";\r\nimport { startBundle } from \"@/rollup\";\r\nimport Terminal from \"@/terminal\";\r\nimport { loadTsConfigJson } from \"@/tsconfig\";\r\nimport { json as Json, colors, parser } from \"@nfts/nodeutils\";\r\nimport type { IPackageJson } from \"@nfts/pkg-json\";\r\nimport nodePath from \"node:path\";\r\n\r\nasync function cli(args: string[]) {\r\n    const [, ..._args] = args;\r\n    const pkgJson = Json.readJSONSync<IPackageJson>(CONSTANTS.packageJson);\r\n\r\n    const beatsPkgJson = Json.readJSONSync<IPackageJson>(\r\n        nodePath.resolve(require.resolve(\"..\"), \"../../package.json\"),\r\n    );\r\n\r\n    const term = new Terminal();\r\n\r\n    const {\r\n        project,\r\n        config: configPath,\r\n        ...inputOptions\r\n    } = parser<CLIOptions>(_args);\r\n\r\n    // Load `.env` file if possible.\r\n    loadEnv();\r\n\r\n    const isWatch = inputOptions.watch;\r\n\r\n    // Show cli info box.\r\n    if (!isWatch) {\r\n        term.clearScreen().box([\r\n            colors.red(`@nfts/beats(${beatsPkgJson.version})`),\r\n        ]);\r\n        // term.nextLine();\r\n    }\r\n\r\n    term.writeLine(`Read ts config from ${project || CONSTANTS.tsconfig}`);\r\n    term.nextLine();\r\n\r\n    // Read `tsconfig.json`\r\n    const tsConfig = loadTsConfigJson(project ?? CONSTANTS.tsconfig);\r\n\r\n    if (configPath) {\r\n        term.writeLine(`Read beats config from ${configPath}`);\r\n        term.nextLine();\r\n    }\r\n\r\n    // Load `beats.config.json`.\r\n    const config = await tryReadConfig({\r\n        configPath,\r\n        pkgJson,\r\n    });\r\n\r\n    return startBundle({\r\n        term,\r\n        config: {\r\n            ...config,\r\n            ...inputOptions,\r\n            project,\r\n        },\r\n        pkgJson,\r\n        tsConfig,\r\n    });\r\n}\r\n\r\ncli(process.argv.slice(1))\r\n    .then(() => {\r\n        process.exit(0);\r\n    })\r\n    .catch((e) => {\r\n        console.error(e);\r\n        process.exit();\r\n    });\r\n"],"names":["__knownSymbol","__forAwait","CONSTANTS.esmExt","CONSTANTS.cjsExt","CONSTANTS.esmMiddleNames","CONSTANTS.cjsMiddleNames","output","CONSTANTS.output","module_","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","sys","createCompilerHost","createProgram","CONSTANTS.tsconfig","CONSTANTS.packageJson","CONSTANTS.dtsDir","CONSTANTS.dtsEntry","ExtractorConfig","Extractor","File","colors","__objRest","rollup","ms","watch","CONSTANTS.outputDir","CONSTANTS.input","readJsonConfigFile","parseJsonSourceFileConfigFileContent","Json","parser"],"mappings":"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"}