{"version":3,"file":"index.cjs","sources":["../src/constants.ts","../src/log.ts","../src/utils.ts","../src/configuration.ts","../src/plugins/bundleProgress.ts","../src/plugins/cleanup.ts","../src/dts.ts","../src/tsconfig.ts","../src/plugins/esbuild.ts","../src/plugins/alias.ts","../src/rollup.ts","../src/env.ts","../src/terminal.ts","../src/cli.ts"],"sourcesContent":["export const tsconfig = \"./tsconfig.json\";\nexport const packageJson = \"./package.json\";\nexport const dtsEntry = \"index.d.ts\";\n\nexport const output = \"./index.js\";\nexport const input = \"./src/index\";\n\nexport const outputDir = \"npm\";\nexport const dtsDir = \".dts\";\n\nexport const esmExt = [\".mjs\", \".mts\"];\nexport const cjsExt = [\".cjs\", \".cts\"];\n\nexport const esmMiddleNames = [\".esm.\", \".es.\"];\nexport const cjsMiddleNames = [\".cjs.\"];\n\n","import { colors } from \"@nfts/nodeutils\";\r\n\r\n/**\r\n * Verbose\r\n * @param args\r\n */\r\n// eslint-disable-next-line\r\nexport const verboseLog = (...args: any[]) => {\r\n    if (process.env.VERBOSE) {\r\n        console.log(...args);\r\n    }\r\n};\r\n\r\n/**\r\n * Debug\r\n * @param args\r\n */\r\n// eslint-disable-next-line\r\nexport const debugLog = (...args: any[]) => {\r\n    if (process.env.DEBUG) {\r\n        console.log();\r\n        console.debug(\r\n            colors.bgBlack(colors.cyan(colors.bold(\"debug:\"))),\r\n            ...args,\r\n        );\r\n    }\r\n};\r\n","import { verboseLog } from \"@/log\";\r\nimport { colors, json as Json } from \"@nfts/nodeutils\";\r\nimport { IPackageJson } from \"@nfts/pkg-json\";\r\nimport nodePath from \"node:path\";\r\nimport { RollupOptions } from \"rollup\";\r\n\r\n// Clear screen.\r\nexport const clearScreen = () => process.stdout.write(\"\\x1Bc\");\r\n\r\n// Current working directory.\r\nexport const cwd = () => process.cwd();\r\n\r\nexport const isSameRollupInput = (\r\n    input1: RollupOptions[\"input\"],\r\n    input2: RollupOptions[\"input\"],\r\n) => {\r\n    const type1 = typeof input1;\r\n    const type2 = typeof input2;\r\n\r\n    if (type1 !== type2) {\r\n        return false;\r\n    }\r\n\r\n    if (Array.isArray(input1) && Array.isArray(input2)) {\r\n        return input1.toString() === input2.toString();\r\n    }\r\n\r\n    return input1 === input2;\r\n};\r\n\r\n/**\r\n * Convert \"x1,x2,x3\" to [\"x1\", \"x2\", \"x3\"]\r\n * @param input\r\n */\r\nexport const normalizeCliInput = (input: string) => {\r\n    return input.trimStart().trimEnd().split(\",\").filter(Boolean);\r\n};\r\n\r\nexport const depsInfo = () => {\r\n    const coreDeps = [\"typescript\", \"esbuild\", \"rollup\"];\r\n\r\n    const depInfo = coreDeps\r\n        .map((dep) => {\r\n            const main = require.resolve(dep);\r\n            const depDir = nodePath.join(main, \"../../\");\r\n            const pkgJson = Json.readJSONSync<IPackageJson>(\r\n                nodePath.join(depDir, \"package.json\"),\r\n            );\r\n\r\n            const { name, version } = pkgJson;\r\n            return {\r\n                name,\r\n                version,\r\n                path: depDir,\r\n            };\r\n        })\r\n        .reduce((infos, info) => {\r\n            return (infos += `${colors.green(\"*\")} ${info.name}@${colors.green(\r\n                info.version,\r\n            )} \\n`);\r\n        }, \"\");\r\n\r\n    verboseLog(depInfo);\r\n};\r\n\r\n/**\r\n * Write bundle result to terminal.\r\n * @param input\r\n * @param output\r\n */\r\nexport function printOutput(input: string, output: string) {\r\n    console.log(\r\n        colors.bgBlack(\r\n            colors.bold(colors.cyan(nodePath.relative(cwd(), input))),\r\n        ),\r\n        colors.cyan(\"➡︎\"),\r\n        colors.cyan(output),\r\n    );\r\n}\r\n\r\nexport function measureSync(mark: string, task: () => void) {\r\n    performance.mark(`${mark} start`);\r\n    task();\r\n    performance.mark(`${mark} end`);\r\n\r\n    const measure = performance.measure(\r\n        `${mark} start to end`,\r\n        `${mark} start`,\r\n        `${mark} end`,\r\n    );\r\n\r\n    verboseLog(\r\n        colors.bgBlack(\r\n            colors.white(colors.bold(`${mark} duration: ${measure.duration}`)),\r\n        ),\r\n    );\r\n}\r\n\r\nexport async function measure(mark: string, task: () => Promise<void>) {\r\n    performance.mark(`${mark} start`);\r\n    await task();\r\n    performance.mark(`${mark} end`);\r\n\r\n    const measure = performance.measure(\r\n        `${mark} start to end`,\r\n        `${mark} start`,\r\n        `${mark} end`,\r\n    );\r\n\r\n    verboseLog(\r\n        colors.bgBlack(\r\n            colors.white(colors.bold(`${mark} duration: ${measure.duration}`)),\r\n        ),\r\n    );\r\n}\r\n\r\nexport function resolveDtsEntryFromEntry(\r\n    declarationDir: string,\r\n    entry: string,\r\n) {\r\n    let entryUnshiftRoot = nodePath\r\n        .join(cwd(), entry)\r\n        .replace(cwd() + nodePath.sep, \"\")\r\n        .split(nodePath.sep)\r\n        .slice(1)\r\n        .join(nodePath.sep)\r\n        .replace(\".ts\", \".d.ts\");\r\n\r\n    if (!entryUnshiftRoot.endsWith(\".d.ts\")) {\r\n        entryUnshiftRoot += \".d.ts\";\r\n    }\r\n\r\n    return nodePath.join(cwd(), declarationDir, entryUnshiftRoot);\r\n}\r\n\r\n/**\r\n * Serialize async tasks.\r\n * @param tasks\r\n */\r\n// eslint-disable-next-line\r\nexport async function serialize(tasks: (() => Promise<any>)[]) {\r\n    return tasks.reduce((promise, next) => {\r\n        return promise.then(() => {\r\n            return next();\r\n        });\r\n    }, Promise.resolve());\r\n}\r\n\r\n/**\r\n * Split text by length.\r\n * @param str\r\n * @param len\r\n */\r\nexport function strSplitByLength(str: string, len: number): string[] {\r\n    const result = str.match(new RegExp(`(.{1,${len}})`, \"g\"));\r\n    return result ?? [];\r\n}\r\n\r\n/** @link https://github.com/chalk/strip-ansi/blob/main/index.js */\r\nexport function stripAnsi(\r\n    text: string,\r\n    { onlyFirst }: { onlyFirst: boolean } = { onlyFirst: true },\r\n) {\r\n    const pattern = [\r\n        \"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\r\n        \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))\",\r\n    ].join(\"|\");\r\n    const regexp = new RegExp(pattern, onlyFirst ? undefined : \"g\");\r\n    return text.replace(regexp, \"\");\r\n}\r\n","import * as CONSTANTS from \"@/constants\";\nimport { type TRollupTransformOptions } from \"@/plugins/esbuild\";\nimport { cwd } from \"@/utils\";\nimport { module_ } from \"@nfts/nodeutils\";\nimport { type IPackageJson } from \"@nfts/pkg-json\";\nimport { RollupCommonJSOptions } from \"@rollup/plugin-commonjs\";\nimport { RollupEslintOptions } from \"@rollup/plugin-eslint\";\nimport { RollupNodeResolveOptions } from \"@rollup/plugin-node-resolve\";\nimport nodeFs from \"node:fs/promises\";\nimport nodePath from \"node:path\";\nimport { Plugin, type ModuleFormat, type RollupOptions } from \"rollup\";\n\n/**\n * Return output format.\n * @param output\n */\nfunction getFormatFromFileName(output: string): ModuleFormat {\n    const ext = nodePath.extname(output);\n\n    if (CONSTANTS.esmExt.includes(ext) || output.endsWith(\".d.ts\")) {\n        return \"es\";\n    }\n\n    if (CONSTANTS.cjsExt.includes(ext)) {\n        return \"cjs\";\n    }\n\n    if (CONSTANTS.esmMiddleNames.some((name) => output.includes(name))) {\n        return \"es\";\n    }\n\n    if (CONSTANTS.cjsMiddleNames.some((name) => output.includes(name))) {\n        return \"cjs\";\n    }\n\n    return \"cjs\";\n}\n\n/**\n * Get outputs from package.json\n * @param pkgJson\n * @param externalOutputOptions\n */\nfunction getOutputFromPackageJson(\n    pkgJson: IPackageJson,\n    externalOutputOptions: (opt: TBundleConfig) => TBundleConfig = (o) => o,\n): TBundleConfig[] {\n    const { main, module: m } = pkgJson;\n    return (\n        [main, m]\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            .filter<string>(Boolean)\n            .map((output) => {\n                const format = getFormatFromFileName(output);\n\n                // dot mark fallback to ./index.js\n                if (output === \".\") {\n                    output = CONSTANTS.output;\n                }\n\n                return externalOutputOptions({\n                    format,\n                    file: output,\n                });\n            })\n    );\n}\n\n/**\n * Default config.\n */\nconst Configs = [\"beats.config.js\", \"beats.config.ts\", \"beats.config.json\"];\n\nexport type TBundleConfig = {\n    input?: string;\n    dir?: string;\n    file?: string;\n    format?: ModuleFormat;\n    globals?: string[];\n    plugins?: Plugin[];\n    paths?: {\n        [K: string]: string;\n    };\n    sourcemap?: boolean | \"inline\" | \"hidden\";\n};\n\nexport interface CLIOptions {\n    // eslint-disable-next-line\n    [K: string]: any;\n    /**\n     * Entry file for all bundle output. If you are not specified in bundle item.\n     * this would be the default input.\n     */\n    input?: string;\n\n    /**\n     * Should generate .d.ts file for bundle.\n     */\n    dtsRollup?: boolean;\n\n    /**\n     * Generate .map file for bundle output.\n     */\n    sourcemap?: boolean | \"inline\" | \"hidden\";\n\n    /**\n     * Specified beats config file path.\n     */\n    config?: string;\n\n    /**\n     * tsconfig file path.\n     */\n    project?: string;\n\n    /**\n     * Print more info in terminal during bundle.\n     */\n    verbose?: boolean;\n\n    /**\n     * Watch mode.\n     */\n    watch?: boolean;\n\n    /**\n     * Cleanup before output write.\n     */\n    clean?: boolean;\n    /**\n     * Confound bundle code.\n     */\n    minify?: boolean;\n\n    /**\n     * Show internal debug info.\n     */\n    debug?: boolean;\n}\n\nexport interface Config extends CLIOptions {\n    /**\n     * Dependencies should be exclude during bundle.\n     */\n    externals?: string[];\n\n    /**\n     * esbuild options.\n     */\n    esbuild?: TRollupTransformOptions;\n\n    /**\n     * eslint options.\n     */\n    eslint?: RollupEslintOptions & {\n        /**\n         * Disable use of configuration from .eslintrc.*\n         */\n        noEslintrc?: boolean;\n    };\n\n    commonjs?: RollupCommonJSOptions;\n    nodeResolve?: RollupNodeResolveOptions;\n\n    /**\n     * TODO:\n     *  rollup-plugin-styles is no longer actively update,\n     *  Try to replace rollup-plugin-styles with new plugin.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    styles?: any;\n\n    /**\n     * Extra rollup options.\n     */\n    rollup?: Exclude<TRollupOptions, \"output\" | \"input\">;\n\n    /**\n     * Output options.\n     */\n    bundle?: TBundleConfig[];\n\n    /**\n     * Overwrite bundle config\n     */\n    bundleOverwrite?: (b: TBundleConfig) => TBundleConfig;\n}\n\nexport type TRollupOptions = Omit<RollupOptions, \"input\"> & {\n    input: string;\n};\n\n/**\n * Configuration define helper.\n * @param options\n */\nexport function defineConfig(options: Config) {\n    return options;\n}\n\n/**\n * Read config from project.\n * @param configPath\n * @param pkgJson\n */\nexport async function tryReadConfig({\n    configPath,\n    pkgJson,\n}: {\n    configPath?: string;\n    pkgJson: IPackageJson;\n}): Promise<Config> {\n    const _cwd = cwd();\n\n    let config: Config;\n\n    if (!configPath) {\n        for await (const configFile of Configs) {\n            try {\n                const configFilePath = nodePath.join(_cwd, configFile);\n                await nodeFs.access(configFilePath);\n                configPath = configFilePath;\n                break;\n            } catch (e: unknown) {\n                // TODO: Skip error\n            }\n        }\n    }\n\n    if (configPath) {\n        config = module_.import_<Config>(configPath);\n\n        if (!config.bundle) {\n            Object.assign(config, {\n                bundle: getOutputFromPackageJson(\n                    pkgJson,\n                    config.bundleOverwrite,\n                ),\n            });\n        }\n\n        if (pkgJson.types) {\n            Object.assign(config, { dtsRollup: true });\n        }\n\n        return config;\n    } else {\n        return {\n            dtsRollup: !!pkgJson.types,\n            bundle: getOutputFromPackageJson(pkgJson),\n        };\n    }\n}\n","import { type Plugin } from \"rollup\";\nimport nodePath from \"node:path\";\nimport { cwd } from \"@/utils\";\n\nexport type BundleStatus = {\n    loaded: number;\n    parsed: number;\n};\n\nexport default function bundleProgress(): Plugin {\n    let cur: string;\n    const bundlesStatus: { [K: string]: BundleStatus } = {};\n\n    return {\n        name: \"bin\",\n        resolveId(id, importer, { isEntry }) {\n            if (isEntry && !importer && nodePath.isAbsolute(id)) {\n                cur = id;\n                bundlesStatus[id] = {\n                    loaded: 0,\n                    parsed: 0,\n                };\n            }\n        },\n\n        load() {\n            if (bundlesStatus[cur]) {\n                bundlesStatus[cur].loaded += 1;\n            }\n        },\n\n        moduleParsed(moduleInfo) {\n            const status = bundlesStatus[cur];\n            if (status) {\n                status.parsed += 1;\n                if (process.stdout.isTTY) {\n                    const relativeModulePath = nodePath.relative(\n                        cwd(),\n                        moduleInfo.id,\n                    );\n                    const output = `(${status.parsed}/${status.loaded}) ${relativeModulePath}`;\n\n                    process.stdout.clearLine(0);\n                    process.stdout.cursorTo(0);\n                    process.stdout.write(\n                        output.length > process.stdout.columns\n                            ? output.slice(0, process.stdout.columns - 1)\n                            : output,\n                    );\n                }\n            }\n        },\n\n        generateBundle() {\n            if (process.stdout.isTTY) {\n                process.stdout.clearLine(0);\n                process.stdout.cursorTo(0);\n            }\n        },\n    };\n}\n","import { type Plugin } from \"rollup\";\r\nimport nodePath from \"node:path\";\r\nimport { cwd } from \"@/utils\";\r\nimport nodeFs from \"node:fs/promises\";\r\n\r\nexport interface RollupCleanupOptions {\r\n    active?: boolean;\r\n}\r\n\r\n/**\r\n * cleanup output dir.\r\n * @param active\r\n */\r\nexport default function cleanup(\r\n    { active }: RollupCleanupOptions = { active: true },\r\n): Plugin {\r\n    return {\r\n        name: \"rmdir\",\r\n        version: \"0.0.1\",\r\n        async generateBundle(output, _, isWrite) {\r\n            if (active && !isWrite) {\r\n                if (output.file) {\r\n                    const absPath = nodePath.join(cwd(), output.file);\r\n\r\n                    try {\r\n                        await nodeFs.access(absPath);\r\n                        await nodeFs.unlink(absPath);\r\n                        await nodeFs.unlink(`${absPath}.map`);\r\n                    } catch (e) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    };\r\n}\r\n","import * as CONSTANTS from \"@/constants\";\nimport Terminal from \"@/terminal\";\nimport { cwd, resolveDtsEntryFromEntry } from \"@/utils\";\nimport {\n    Extractor,\n    ExtractorConfig,\n    ExtractorLogLevel,\n    ExtractorMessage,\n} from \"@microsoft/api-extractor\";\nimport { file as File, colors } from \"@nfts/nodeutils\";\nimport nodeFs from \"node:fs/promises\";\nimport nodePath from \"node:path\";\nimport ts, {\n    createCompilerHost,\n    createProgram,\n    sys,\n    type CompilerOptions,\n} from \"typescript\";\n\nexport function createCompilerProgram(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n): ts.Program | undefined {\n    // TODO：可配置来创建 incremental program\n    const config = ts.getParsedCommandLineOfConfigFile(\n        tsconfig,\n        tsConfigCompilerOptions,\n        {\n            useCaseSensitiveFileNames: true,\n            getCurrentDirectory: sys.getCurrentDirectory,\n            readDirectory: sys.readDirectory,\n            fileExists: sys.fileExists,\n            readFile: sys.readFile,\n            onUnRecoverableConfigFileDiagnostic: function (\n                diagnostic: ts.Diagnostic,\n            ): void {\n                console.log(\n                    `onUnRecoverableConfigFileDiagnostic`,\n                    diagnostic.messageText,\n                );\n            },\n        },\n    );\n\n    const host = createCompilerHost(tsConfigCompilerOptions);\n\n    if (config) {\n        return createProgram({\n            host,\n            options: {\n                ...config.options,\n                noEmit: false,\n            },\n            rootNames: config.fileNames,\n            projectReferences: config.projectReferences,\n            configFileParsingDiagnostics:\n                ts.getConfigFileParsingDiagnostics(config),\n        });\n    }\n}\n\nexport function emitOnlyDeclarations(\n    tsConfigCompilerOptions: CompilerOptions,\n    tsconfig: string,\n) {\n    const program = createCompilerProgram(tsConfigCompilerOptions, tsconfig);\n    if (program) {\n        program.emit(undefined);\n    }\n}\n\nexport interface IDtsGenOptions {\n    term: Terminal;\n    input: string;\n    tsConfigFile?: string;\n    dtsFileName?: string;\n    watch?: boolean;\n}\n\nexport async function dtsGen({\n    term,\n    input,\n    dtsFileName,\n    tsConfigFile = CONSTANTS.tsconfig,\n}: IDtsGenOptions) {\n    // PKG-JSON\n    const packageJsonFullPath = nodePath.resolve(cwd(), CONSTANTS.packageJson);\n\n    emitOnlyDeclarations(\n        {\n            declaration: true,\n            emitDeclarationOnly: true,\n            declarationDir: CONSTANTS.dtsDir,\n        },\n        tsConfigFile,\n    );\n\n    const ext = nodePath.extname(input);\n\n    const mainEntry = CONSTANTS.dtsDir\n        ? resolveDtsEntryFromEntry(CONSTANTS.dtsDir, input)\n        : ext\n        ? input.replace(nodePath.extname(input), \".d.ts\")\n        : `${input}.d.ts`;\n\n    const content = await nodeFs.readFile(mainEntry);\n\n    // Fix #1\n    if (content.toString() === \"\") {\n        return;\n    }\n\n    const trimmedFile = dtsFileName || CONSTANTS.dtsEntry;\n\n    const config = ExtractorConfig.prepare({\n        configObjectFullPath: undefined,\n        packageJsonFullPath: packageJsonFullPath,\n        ignoreMissingEntryPoint: true,\n        configObject: {\n            projectFolder: process.cwd(),\n            compiler: {\n                tsconfigFilePath: tsConfigFile,\n            },\n            mainEntryPointFilePath: mainEntry,\n            dtsRollup: {\n                enabled: true,\n                publicTrimmedFilePath: trimmedFile,\n            },\n            docModel: {\n                enabled: false,\n            },\n            tsdocMetadata: {\n                enabled: false,\n            },\n        },\n    });\n\n    const extractorResult = Extractor.invoke(config, {\n        localBuild: true,\n        showDiagnostics: false,\n        showVerboseMessages: false,\n        typescriptCompilerFolder: nodePath.join(\n            require.resolve(\"typescript\"),\n            \"../..\",\n        ),\n        messageCallback(message: ExtractorMessage) {\n            message.logLevel = \"none\" as ExtractorLogLevel.None;\n        },\n    });\n\n    if (extractorResult.succeeded) {\n        // TODO: Add verbose message\n    } else {\n        // TODO: Throw whe meet error\n    }\n\n    File.rmdirSync(CONSTANTS.dtsDir);\n\n    const message = ` ✨ ${colors.bgBlack(\n        colors.bold(nodePath.relative(cwd(), input)),\n    )} ${colors.bold(\"->\")} ${nodePath.relative(cwd(), trimmedFile)}`;\n\n    term.writeLine(message);\n    term.nextLine();\n    term.nextLine();\n}\n\n","import { ITSConfigJson } from \"@nfts/tsc-json\";\nimport {\n    parseJsonSourceFileConfigFileContent,\n    readJsonConfigFile,\n    sys,\n} from \"typescript\";\n\nexport function loadTsConfigJson(path = \"./tsconfig.json\"): ITSConfigJson {\n    const sourceFile = readJsonConfigFile(path, sys.readFile);\n    const parsedCommandLine = parseJsonSourceFileConfigFileContent(\n        sourceFile,\n        {\n            useCaseSensitiveFileNames: true,\n            readDirectory: sys.readDirectory,\n            readFile: sys.readFile,\n            fileExists: sys.fileExists,\n        },\n        \".\",\n    );\n\n    const { raw = {}, options } = parsedCommandLine;\n\n    console.log(\n        {\n            ...raw,\n            compilerOptions: options,\n        }\n    );\n\n\n    return {\n        ...raw,\n        compilerOptions: options,\n    };\n}\n\n","import { type ITSConfigJson } from \"@nfts/tsc-json\";\r\nimport { type Loader, transform, type TransformOptions } from \"esbuild\";\r\nimport { extname } from \"node:path\";\r\nimport { Plugin } from \"rollup\";\r\nimport {\r\n    type Diagnostic,\r\n    formatDiagnosticsWithColorAndContext,\r\n    type Program,\r\n    sys,\r\n} from \"typescript\";\r\nimport { createCompilerProgram } from \"@/dts\";\r\nimport { loadTsConfigJson } from \"@/tsconfig\";\r\n\r\nexport type TEsbuildTsx = \"react\" | \"react-jsx\" | \"react-jsxdev\" | \"preserve\";\r\n\r\n/**\r\n * Only handle js/ts file.\r\n */\r\nconst EsbuildLoaders = {\r\n    \".js\": \"js\",\r\n    \".jsx\": \"jsx\",\r\n    \".ts\": \"ts\",\r\n    \".tsx\": \"tsx\",\r\n    \".json\": \"json\",\r\n};\r\n\r\nexport type TRollupTransformOptions = TransformOptions;\r\n\r\nexport interface IEsbuildPluginOptions {\r\n    options?: TRollupTransformOptions;\r\n    tsConfigFile: string;\r\n}\r\n\r\nexport default function esbuild({\r\n    options,\r\n    tsConfigFile,\r\n}: IEsbuildPluginOptions): Plugin {\r\n    let tsErrors: Diagnostic[] = [];\r\n    let program: Program | undefined;\r\n\r\n    let tsConfigJson: ITSConfigJson | undefined;\r\n\r\n    try {\r\n        tsConfigJson = loadTsConfigJson(tsConfigFile);\r\n    } catch (_) {}\r\n\r\n    /**\r\n     * 目前 esbuild 支持的 tsconfig 配置\r\n     */\r\n    const tsconfigRaw = {\r\n        compilerOptions: {\r\n            extends: tsConfigJson?.extends,\r\n            baseUrl: !!tsConfigJson?.compilerOptions?.baseUrl,\r\n            target: tsConfigJson?.compilerOptions?.target as string,\r\n            alwaysStrict: tsConfigJson?.compilerOptions?.alwaysStrict,\r\n            importsNotUsedAsValues:\r\n                tsConfigJson?.compilerOptions?.importsNotUsedAsValues,\r\n            /**\r\n             * JSX Part\r\n             */\r\n            jsx: tsConfigJson?.compilerOptions?.jsx as TEsbuildTsx,\r\n            jsxFactory: tsConfigJson?.compilerOptions?.jsxFactory,\r\n            jsxFragmentFactory:\r\n                tsConfigJson?.compilerOptions?.jsxFragmentFactory,\r\n            jsxImportSource: tsConfigJson?.compilerOptions?.jsxImportSource,\r\n\r\n            paths: tsConfigJson?.compilerOptions?.paths,\r\n            preserveValueImports:\r\n                tsConfigJson?.compilerOptions?.preserveValueImports,\r\n            useDefineForClassFields:\r\n                tsConfigJson?.compilerOptions?.useDefineForClassFields,\r\n        },\r\n    };\r\n\r\n    return {\r\n        name: \"esbuild\",\r\n        buildStart() {\r\n            tsErrors.length = 0;\r\n            // TODO: 使用 incremental program 性能优化\r\n            program = createCompilerProgram(\r\n                {\r\n                    emitDeclarationOnly: true,\r\n                    composite: true,\r\n                },\r\n                tsConfigFile,\r\n            );\r\n        },\r\n        async transform(code: string, id: string) {\r\n            const ext = extname(id);\r\n\r\n            const loader = EsbuildLoaders[\r\n                ext as keyof typeof EsbuildLoaders\r\n            ] as Loader;\r\n\r\n            if (!loader) {\r\n                return null;\r\n            }\r\n\r\n            const sourceFile = program?.getSourceFile(id);\r\n\r\n            if (sourceFile) {\r\n                const diagnostics = [\r\n                    ...(program?.getSemanticDiagnostics(sourceFile) ?? []),\r\n                    ...(program?.getSyntacticDiagnostics(sourceFile) ?? []),\r\n                    ...(program?.getDeclarationDiagnostics(sourceFile) ?? []),\r\n                ];\r\n\r\n                if (diagnostics.length > 0) {\r\n                    tsErrors = tsErrors.concat(diagnostics);\r\n                }\r\n            }\r\n\r\n            const result = await transform(code, {\r\n                loader,\r\n                target: \"es2017\",\r\n                sourcefile: id,\r\n                treeShaking: true,\r\n                tsconfigRaw,\r\n                ...options,\r\n            });\r\n\r\n            return (\r\n                result.code && {\r\n                    code: result.code,\r\n                    map: result.map || null,\r\n                }\r\n            );\r\n        },\r\n        buildEnd() {\r\n            if (tsErrors.length > 0) {\r\n                const formattedDiagnostics =\r\n                    formatDiagnosticsWithColorAndContext(tsErrors, {\r\n                        getCurrentDirectory: sys.getCurrentDirectory,\r\n                        getCanonicalFileName: (fileName: string): string => {\r\n                            return fileName;\r\n                        },\r\n                        getNewLine: (): string => {\r\n                            return sys.newLine;\r\n                        },\r\n                    });\r\n\r\n                this.error(formattedDiagnostics);\r\n            }\r\n        },\r\n    };\r\n}\r\n","import { type Plugin } from \"rollup\";\nimport { type IPathObject } from \"@nfts/tsc-json\";\nimport nodePath from \"node:path\";\nimport { cwd } from \"@/utils\";\n\nexport type RollupAliasOptions = { alias: IPathObject };\n\n/**\n * tsconfig paths to alias.\n * this plugin need to be the first one of the rollup plugin array.\n * @param alias\n */\nexport default function alias({ alias }: RollupAliasOptions): Plugin {\n    const aliaNames = Object.keys(alias);\n\n    return {\n        name: \"alias\",\n        resolveId: {\n            order: \"pre\",\n            async handler(id, importer) {\n                if (aliaNames.length === 0) return null;\n\n                const aliaNamesMatched = aliaNames.filter((name) =>\n                    id.startsWith(name.replace(/\\*/g, \"\")),\n                );\n\n                if (aliaNamesMatched.length === 0) return null;\n\n                const matchedPathName = aliaNamesMatched[0];\n                const matchedPathAlias = alias[matchedPathName];\n\n                let resolution;\n\n                for await (const path of matchedPathAlias) {\n                    const pathStripStar = path.replace(/\\*/g, \"\");\n                    const matchedPathNameStripStar = matchedPathName.replace(\n                        /\\*/g,\n                        \"\",\n                    );\n\n                    const realId = nodePath.join(\n                        cwd(),\n                        `./${id.replace(\n                            matchedPathNameStripStar,\n                            pathStripStar,\n                        )}`,\n                    );\n\n                    resolution = await this.resolve(realId, importer, {\n                        skipSelf: true,\n                    });\n\n                    if (resolution) {\n                        break;\n                    }\n                }\n\n                return resolution;\n            },\n        },\n    };\n}\n","import { type Config, type TRollupOptions } from \"@/configuration\";\nimport bundleProgress from \"@/plugins/bundleProgress\";\nimport cleanup, { RollupCleanupOptions } from \"@/plugins/cleanup\";\nimport esbuild from \"@/plugins/esbuild\";\nimport { cwd, isSameRollupInput, normalizeCliInput, serialize } from \"@/utils\";\nimport { colors, ms } from \"@nfts/nodeutils\";\nimport { type IPackageJson } from \"@nfts/pkg-json\";\nimport { type ITSConfigJson } from \"@nfts/tsc-json\";\nimport commonjs from \"@rollup/plugin-commonjs\";\nimport eslint from \"@rollup/plugin-eslint\";\nimport nodeResolve from \"@rollup/plugin-node-resolve\";\nimport Module from \"node:module\";\nimport nodePath from \"node:path\";\nimport {\n    rollup,\n    watch,\n    type RollupOptions,\n    type RollupOutput,\n    type RollupWatchOptions,\n} from \"rollup\";\n// import postcssPlugin from \"@/plugins/styles\";\nimport * as CONSTANTS from \"@/constants\";\nimport { dtsGen } from \"@/dts\";\nimport { verboseLog } from \"@/log\";\nimport alias, { RollupAliasOptions } from \"@/plugins/alias\";\nimport styles from \"rollup-plugin-styles\";\nimport Terminal from \"./terminal\";\n\nexport const Extensions = [\n    \".js\",\n    \".jsx\",\n    \".ts\",\n    \".tsx\",\n    \".json\",\n    \".mjs\",\n    \".cjs\",\n    \".mts\",\n    \".cts\",\n    \".node\",\n];\n\nexport const StyleSheetExtensions = [\".css\", \".less\", \".scss\", \".sass\"];\n\n/**\n *\n * @desc Externals function for rollup.externals,\n * by default, all devDependencies and dependencies in package.json\n * will be ignored.\n *\n */\nexport const externalsGenerator = (\n    externals: string[] = [],\n    pkgJson: IPackageJson,\n) => {\n    /**\n     * Default exclude deps and peerDeps\n     */\n    const { dependencies = {}, peerDependencies = {} } = pkgJson;\n    const nativeModules = Module.builtinModules\n        .concat(Module.builtinModules.map((m) => `node:${m}`))\n        .concat(\n            Object.keys(dependencies).concat(Object.keys(peerDependencies)),\n        );\n\n    return (id: string) => {\n        return externals?.includes(id) || nativeModules.includes(id);\n    };\n};\n\n/**\n * Default plugins.\n **/\nexport const applyPlugins = (\n    options?: Pick<\n        Config,\n        \"eslint\" | \"nodeResolve\" | \"commonjs\" | \"esbuild\" | \"styles\"\n    > & {\n        clean?: RollupCleanupOptions;\n        alias?: RollupAliasOptions;\n    },\n) => {\n    return [\n        cleanup(options?.clean),\n        styles(options?.styles),\n        alias(options?.alias ?? { alias: {} }),\n        // @TODO\n        // postcssPlugin({ cssModules: true }),\n        esbuild(\n            Object.assign({\n                options: options?.esbuild,\n                tsConfigFile: nodePath.join(cwd(), \"tsconfig.json\"),\n            }),\n        ),\n        nodeResolve(\n            Object.assign(\n                {\n                    rootDir: cwd(),\n                    preferBuiltins: false,\n                    extensions: Extensions,\n                },\n                options?.nodeResolve ?? {},\n            ),\n        ),\n        commonjs(\n            Object.assign({ extensions: Extensions }, options?.commonjs ?? {}),\n        ),\n        eslint(Object.assign({}, options?.eslint ?? {})),\n        bundleProgress(),\n    ].filter(Boolean);\n};\n\nexport type TBundleOutput =\n    | {\n          duration: number;\n          input: string;\n      }\n    | RollupOutput;\n\n/**\n *\n * Get all bundle tasks.\n *\n */\nexport const bundle = async ({\n    term,\n    options,\n    config,\n    pkgJson,\n}: {\n    term: Terminal;\n    options: TRollupOptions | TRollupOptions[];\n    config: Config;\n    pkgJson: IPackageJson;\n}) => {\n    const bundles: (() => Promise<TBundleOutput>)[] = [];\n\n    if (!Array.isArray(options)) {\n        options = [options];\n    }\n\n    for await (const option of options) {\n        const bundle_ = await rollup(option);\n        let { output } = option;\n        const { input } = option;\n        if (output) {\n            if (output && !Array.isArray(output)) {\n                output = [output];\n            }\n\n            for (const output_ of output) {\n                // Add bundle task\n                bundles.push(async () => {\n                    const start = Date.now();\n                    await bundle_.generate(output_);\n                    const output = await bundle_.write(output_);\n\n                    const duration = Date.now() - start;\n\n                    const message = ` ✨ ${colors.bgBlack(\n                        colors.bold(nodePath.relative(cwd(), input)),\n                    )} ${colors.bold(\"->\")} ${output_.file as string} (${ms(\n                        duration,\n                    )})`;\n\n                    term.writeLine(message);\n                    term.nextLine();\n\n                    return {\n                        ...output,\n                        duration,\n                    };\n                });\n            }\n\n            // One bundle one dts.\n            bundles.push(async () => {\n                const start = Date.now();\n                await dts({ term, config, pkgJson, rollup: option });\n                return {\n                    // TODO: Add input value.\n                    input: \"\",\n                    duration: Date.now() - start,\n                };\n            });\n        } else {\n            verboseLog(`Output not found for input '${option.input}', skip...`);\n        }\n    }\n\n    return bundles;\n};\n\n/**\n *\n * Dev process\n *\n */\nexport const watch_ = async (\n    options: RollupWatchOptions | RollupWatchOptions[],\n    term: Terminal,\n    {\n        bundleEnd,\n        bundleStart,\n        start,\n        end,\n        error,\n    }: {\n        bundleEnd?: () => void;\n        bundleStart?: () => void;\n        start?: () => void;\n        end?: () => Promise<void>;\n        error?: () => void;\n    } = {},\n) => {\n    const watcher = watch(options);\n    let firstRun = true;\n    let startTime: number;\n    try {\n        await new Promise<void>(() => {\n            watcher.on(`event`, (e) => {\n                const code = e.code;\n                switch (code) {\n                    case \"START\": {\n                        term.clearScreen();\n                        start?.();\n                        if (firstRun) {\n                            term.writeLine(`Start rollup watching bundle.`);\n                        }\n                        startTime = new Date().getTime();\n                        break;\n                    }\n\n                    case \"BUNDLE_START\": {\n                        bundleStart?.();\n                        break;\n                    }\n\n                    case \"BUNDLE_END\": {\n                        bundleEnd?.();\n                        break;\n                    }\n\n                    case \"END\": {\n                        end?.().finally(() => {\n                            if (firstRun) {\n                                term.writeLine(\n                                    `Bundle end in ${ms(\n                                        new Date().getTime() - startTime,\n                                    )}`,\n                                );\n                            } else {\n                                term.writeLine(\n                                    `Re-bundle end ${ms(\n                                        new Date().getTime() - startTime,\n                                    )}`,\n                                );\n                            }\n                            firstRun = false;\n                        });\n\n                        break;\n                    }\n                    case \"ERROR\": {\n                        error?.();\n                        term.clearScreen().writeLine(\n                            `Bundle Error: ${e.error.message}`,\n                        );\n                        break;\n                    }\n                }\n            });\n        });\n    } catch (e) {\n        //\n    }\n};\n\nasync function dts({\n    term,\n    config,\n    rollup,\n    pkgJson,\n}: {\n    term: Terminal;\n    config: Config;\n    rollup: TRollupOptions;\n    pkgJson: IPackageJson;\n}): Promise<void> {\n    const { input } = rollup;\n    const { module, main, types } = pkgJson;\n    const output = module || main;\n\n    const inputBasename = nodePath.basename(input);\n    const outputBasepath = output\n        ? nodePath.dirname(output)\n        : CONSTANTS.outputDir;\n\n    const ext = nodePath.extname(inputBasename);\n\n    const outputBasename = ext\n        ? inputBasename.replace(ext, \".d.ts\")\n        : `${inputBasename ?? \"index\"}.d.ts`;\n\n    if (config.dtsRollup) {\n        // await measure(\"dts\", async () => {\n        await dtsGen({\n            term,\n            input,\n            tsConfigFile: config.project ?? CONSTANTS.tsconfig,\n            dtsFileName:\n                types ||\n                nodePath.resolve(cwd(), outputBasepath, outputBasename),\n        });\n        // });\n    }\n}\n\n/**\n * Start rollup bundle process.\n * @param config\n * @param pkgJson\n * @param tsConfig\n * @param term\n */\nexport async function startRollupBundle({\n    term,\n    config,\n    pkgJson,\n    tsConfig,\n}: {\n    term: Terminal;\n    config: Config;\n    pkgJson: IPackageJson;\n    tsConfig: ITSConfigJson;\n}) {\n    const paths = tsConfig.compilerOptions?.paths ?? {};\n    const {\n        eslint,\n        commonjs,\n        nodeResolve,\n        esbuild,\n        styles,\n        rollup: rollupOpt = {} as TRollupOptions,\n        // Options\n        externals,\n        minify,\n        sourcemap,\n        input: cliInput,\n        watch,\n    } = config;\n\n    const rollupPlugins = applyPlugins({\n        eslint,\n        commonjs,\n        nodeResolve,\n        esbuild: Object.assign({ minify }, esbuild ?? {}),\n        styles,\n        alias: { alias: paths },\n        clean: { active: !watch },\n    });\n\n    const externalsFn = externalsGenerator(externals, pkgJson);\n\n    let bundles: TRollupOptions[] = [];\n\n    const { plugins: extraPlugins = [], ...rollupOpts } = rollupOpt;\n\n    const rollupOptionWithoutInputOutput: Omit<\n        RollupOptions,\n        \"input\" | \"output\"\n    > = {\n        perf: true,\n        treeshake: true,\n        strictDeprecations: true,\n        plugins: [...rollupPlugins, extraPlugins],\n        external: externalsFn,\n        ...(rollupOpts ?? {}),\n    };\n\n    if (config.bundle) {\n        bundles = config.bundle.reduce((options, bundle) => {\n            const { input: bundleInput, ...otherProps } = bundle;\n\n            const option = {\n                input:\n                    bundleInput ||\n                    (cliInput\n                        ? normalizeCliInput(cliInput as string)\n                        : CONSTANTS.input),\n                output: [{ ...otherProps, sourcemap }],\n                ...rollupOptionWithoutInputOutput,\n            } as TRollupOptions;\n\n            if (options.length === 0) {\n                return [option];\n            }\n\n            const i = options.findIndex((o) =>\n                isSameRollupInput(o.input, option.input),\n            );\n\n            if (i === -1) {\n                options.push(option);\n            } else {\n                options[i] = Object.assign({}, options[i], {\n                    output: [\n                        ...(options[i].output as TRollupOptions[]),\n                        { ...otherProps, sourcemap },\n                    ],\n                });\n            }\n\n            return options;\n        }, [] as TRollupOptions[]);\n    }\n\n    if (watch) {\n        await watch_(bundles, term, {\n            async end() {\n                await Promise.all(\n                    bundles.map(async (opts) => {\n                        await dts({\n                            term,\n                            config,\n                            pkgJson,\n                            rollup: opts,\n                        });\n                    }),\n                );\n            },\n        });\n    } else {\n        // await measure(\"rollup\", async () => {\n        const tasks = await bundle({\n            options: bundles,\n            config,\n            pkgJson,\n            term,\n        });\n        await serialize(tasks);\n        // });\n    }\n}\n\n","import dotenv, { type DotenvPopulateInput } from \"dotenv\";\r\nimport dotenvExpand from \"dotenv-expand\";\r\n\r\nexport default function loadEnv(input: DotenvPopulateInput) {\r\n    const config = dotenv.config({\r\n        processEnv: input,\r\n    });\r\n    dotenvExpand.expand(config);\r\n}\r\n","import readline from \"node:readline\";\r\nimport { strSplitByLength, stripAnsi } from \"@/utils\";\r\n\r\nexport default class Terminal {\r\n    private readonly stdin = process.stdin;\r\n    private readonly stdout = process.stdout;\r\n\r\n    private x: number;\r\n    private y: number;\r\n\r\n    private maxCols: number;\r\n\r\n    private readonly rl: readline.Interface;\r\n\r\n    constructor() {\r\n        this.rl = readline.createInterface({\r\n            input: this.stdin,\r\n            output: this.stdout,\r\n            historySize: 0,\r\n            removeHistoryDuplicates: true,\r\n            tabSize: 4,\r\n            prompt: \"\",\r\n            terminal: process.stdout.isTTY,\r\n        });\r\n\r\n        const pos = this.rl.getCursorPos();\r\n        this.x = pos.cols;\r\n        this.y = pos.rows;\r\n        this.maxCols =\r\n            process.stdout.columns > 60 ? 60 : process.stdout.columns;\r\n    }\r\n\r\n    private _write(content: string) {\r\n        readline.clearScreenDown(this.stdin);\r\n        const segments = strSplitByLength(content, this.maxCols);\r\n        segments.forEach((text) => {\r\n            this.rl.write(text);\r\n            this.y += 1;\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    public nextLine() {\r\n        this.y += 1;\r\n        this.rl.write(\"\\r\");\r\n        return this;\r\n    }\r\n\r\n    public clearLine(cb?: () => void) {\r\n        process.stdout.cursorTo(0);\r\n        process.stdout.clearLine(1, () => {\r\n            cb?.();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public writeSameLine(content: string) {\r\n        this.clearLine(() => {\r\n            this._write(content);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public writeLine(\r\n        content: string,\r\n        options: { endWithNewLine: boolean } = {\r\n            endWithNewLine: false,\r\n        },\r\n    ) {\r\n        this._write(content);\r\n        if (options.endWithNewLine) {\r\n            this.nextLine();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public clearScreen() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        readline.cursorTo(this.stdin, this.x, this.y);\r\n        readline.clearScreenDown(this.stdin);\r\n        return this;\r\n    }\r\n\r\n    public box(content: string | string[]) {\r\n        this.nextLine();\r\n        this.writeLine(\r\n            `╭${Array(this.maxCols - 2)\r\n                .fill(\"─\")\r\n                .join(\"\")}╮`,\r\n        );\r\n        this.nextLine();\r\n        const padding = 4;\r\n        const writeCenter = (text: string) => {\r\n            const originLen = text.length;\r\n            const stripLen = stripAnsi(text).length;\r\n\r\n            const len = stripAnsi(text).length - (originLen - stripLen) - 0;\r\n            const restLen = this.maxCols - padding * 2;\r\n\r\n            if (restLen < len) {\r\n                strSplitByLength(text, restLen).forEach((t) => {\r\n                    writeCenter(t);\r\n                });\r\n            } else {\r\n                const left = Math.ceil((restLen - len) / 2);\r\n                const leftPadding =\r\n                    \"│\" +\r\n                    Array(left + padding - 1)\r\n                        .fill(\" \")\r\n                        .join(\"\");\r\n                const rightPadding =\r\n                    Array(restLen - left - len + padding - 1)\r\n                        .fill(\" \")\r\n                        .join(\"\") + \"│\";\r\n\r\n                this.writeLine(`${leftPadding}${text}${rightPadding}`);\r\n                this.nextLine();\r\n            }\r\n        };\r\n        const contents = [\r\n            \" \",\r\n            typeof content === \"string\" ? content : content,\r\n            \" \",\r\n        ].flat();\r\n        contents.forEach((t) => {\r\n            writeCenter(t);\r\n        });\r\n        this.writeLine(\r\n            `╰${Array(this.maxCols - 2)\r\n                .fill(\"─\")\r\n                .join(\"\")}╯`,\r\n        );\r\n        this.nextLine();\r\n        return this;\r\n    }\r\n}\r\n","import { tryReadConfig, type CLIOptions } from \"@/configuration\";\nimport * as CONSTANTS from \"@/constants\";\nimport { startRollupBundle } from \"@/rollup\";\nimport { json as Json, colors, parser } from \"@nfts/nodeutils\";\nimport type { IPackageJson } from \"@nfts/pkg-json\";\nimport nodePath from \"node:path\";\nimport loadEnv from \"@/env\";\nimport Terminal from \"@/terminal\";\nimport { loadTsConfigJson } from \"@/tsconfig\";\n\nasync function cli(args: string[]) {\n    const [, ..._args] = args;\n    const pkgJson = Json.readJSONSync<IPackageJson>(CONSTANTS.packageJson);\n    const beatsPkgJson = Json.readJSONSync<IPackageJson>(\n        nodePath.resolve(require.resolve(\"..\"), \"../../package.json\"),\n    );\n\n    const term = new Terminal();\n\n    const {\n        project,\n        config: configPath,\n        debug = false,\n        verbose = false,\n        ...restInputOptions\n    } = parser<CLIOptions>(_args);\n\n    loadEnv({ DEBUG: String(debug), VERBOSE: String(verbose) });\n\n    if (!restInputOptions.watch) {\n        term.clearScreen().box([\n            colors.red(`@nfts/beats(${beatsPkgJson.version})`),\n            ` `,\n            colors.cyan(`This a message!!!`),\n        ]);\n        term.nextLine();\n    }\n\n    const tsConfig = loadTsConfigJson(project ?? CONSTANTS.tsconfig);\n\n    const config = await tryReadConfig({\n        configPath,\n        pkgJson,\n    });\n\n    return startRollupBundle({\n        term,\n        config: {\n            ...config,\n            ...restInputOptions,\n            project,\n        },\n        pkgJson,\n        tsConfig,\n    });\n}\n\ncli(process.argv.slice(1))\n    .then(() => {\n        process.exit(0);\n    })\n    .catch((e) => {\n        console.error(e);\n        process.exit();\n    });\n\n"],"names":["__knownSymbol","__forAwait","CONSTANTS.esmExt","CONSTANTS.cjsExt","CONSTANTS.esmMiddleNames","CONSTANTS.cjsMiddleNames","output","CONSTANTS.output","module_","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","sys","createCompilerHost","createProgram","CONSTANTS.tsconfig","CONSTANTS.packageJson","CONSTANTS.dtsDir","CONSTANTS.dtsEntry","ExtractorConfig","Extractor","File","colors","readJsonConfigFile","parseJsonSourceFileConfigFileContent","extname","transform","formatDiagnosticsWithColorAndContext","__objRest","rollup","ms","watch","CONSTANTS.outputDir","CONSTANTS.input","Json","parser"],"mappings":"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"}